;	section	.text,"ax",@progbits
;	assume	adl = 1
;	section	.text,"ax",@progbits
;	public	gfy_Begin
gfy_Begin:
	call	gfy_internal_Begin
	call	lcd_Init
	ld	hl, 8
	push	hl
	ld	hl, 54
	push	hl
	call	lcd_SendCommand1
	pop	hl
	pop	hl
	ld	hl, 239
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 554
	push	hl
	call	lcd_SendCommandWords
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 319
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 555
	push	hl
	call	lcd_SendCommandWords
	pop	hl
	pop	hl
	pop	hl
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_End
gfy_End:
	ld	hl, 40
	push	hl
	ld	hl, 54
	push	hl
	call	lcd_SendCommand1
	pop	hl
	pop	hl
	ld	hl, 319
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 554
	push	hl
	call	lcd_SendCommandWords
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 239
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 555
	push	hl
	call	lcd_SendCommandWords
	pop	hl
	pop	hl
	pop	hl
	call	lcd_Cleanup
	jp	gfy_internal_End
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_BlitLines
gfy_BlitLines:
	ld	hl, -15
	call	__frameset
	ld	hl, (ix + 6)
	ld	bc, 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_2
	ld	a, 0
	jr	BB2_3
BB2_2:
	ld	a, -1
BB2_3:
	ld	de, -2883584
	ld	iy, -2806784
	bit	0, a
	push	de
	pop	hl
	jr	nz, BB2_5
	lea	hl, iy
BB2_5:
	bit	0, a
	jr	nz, BB2_7
	push	de
	pop	iy
BB2_7:
	ld	de, 0
	ld	e, (ix + 9)
	add	hl, de
	add	iy, de
	ld	de, 0
	ld	e, (ix + 12)
	ld	(ix - 9), de
	ld	(ix - 12), iy
	ld	(ix - 15), hl
BB2_8:
	push	bc
	pop	de
	add	hl, de
	ld	(ix - 6), hl
	add	iy, de
	ld	(ix - 3), bc
	push	bc
	pop	hl
	ld	de, 76800
	or	a, a
	sbc	hl, de
	jr	z, BB2_10
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	push	iy
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	de, 240
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 12)
	ld	hl, (ix - 15)
	jr	BB2_8
BB2_10:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_BlitColumns
gfy_BlitColumns:
	ld	hl, -6
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_2
	ld	a, 0
	jr	BB3_3
BB3_2:
	ld	a, -1
BB3_3:
	ld	hl, -2883584
	ld	iy, -2806784
	bit	0, a
	jr	nz, BB3_5
	lea	hl, iy
BB3_5:
	ld	(ix - 3), hl
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	ld	(ix - 6), de
	ld	bc, 240
	bit	0, a
	jr	nz, BB3_7
	ld	iy, -2883584
BB3_7:
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	add	iy, de
	ld	hl, (ix - 6)
	call	__imulu
	ld	(ix + 6), iy
	ld	de, (ix - 3)
	ld	(ix + 9), de
	ld	(ix + 12), hl
	ld	sp, ix
	pop	ix
	jp	_memcpy
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_BlitRectangle
gfy_BlitRectangle:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_2
	ld	a, 0
	jr	BB4_3
BB4_2:
	ld	a, -1
BB4_3:
	ld	de, -2883584
	ld	iy, -2806784
	bit	0, a
	ld	(ix - 3), de
	jr	nz, BB4_5
	ld	(ix - 3), iy
BB4_5:
	ld	hl, (ix + 9)
	ld	bc, 240
	bit	0, a
	jr	nz, BB4_7
	push	de
	pop	iy
BB4_7:
	ld	de, 0
	ld	e, (ix + 12)
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	ld	hl, (ix + 15)
BB4_8:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_10
	ld	de, (ix + 18)
	push	de
	ld	(ix - 3), bc
	push	bc
	push	iy
	ld	(ix - 6), iy
	ld	(ix - 9), hl
	call	_memcpy
	ld	iy, (ix - 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	ld	hl, (ix - 9)
	dec	hl
	jr	BB4_8
BB4_10:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintChar
gfy_PrintChar:
	ld	hl, -20
	call	__frameset
	ld	a, -128
	ld	(ix - 10), a
	ld	l, (ix + 6)
	push	hl
	call	gfy_GetCharWidth
	push	hl
	pop	iy
	pop	hl
	ld	e, iyl
	lea	hl, iy
	ld	bc, 255
	call	__iand
	ld	(ix - 17), hl
	ld	a, (gfy_TextWidthScale)
	ld	d, a
	ld	(ix - 9), de
	ld	a, (gfy_TextHeightScale)
	ld	(ix - 14), a
	ld	b, 3
	call	__bshl
	ld	c, a
	ld	a, (gfy_PrintChar_Clip)
	ld	hl, (gfy_TextXPos)
	ld	(ix - 13), hl
	cp	a, 2
	jp	z, BB5_24
	ld	de, (gfy_ClipXMin)
	ld	hl, (ix - 13)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB5_24
	ld	hl, (gfy_TextYPos)
	ld	de, (gfy_ClipYMin)
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB5_24
	ld	hl, (ix - 9)
	mlt	hl
	ld	de, 0
	ld	e, l
	ld	hl, (ix - 13)
	add	hl, de
	ex	de, hl
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB5_24
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, c
	ld	hl, (ix - 3)
	add	hl, de
	ex	de, hl
	ld	hl, (gfy_ClipYMax)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB5_24
	ld	hl, (gfy_TextData)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 6)
	ld	c, 3
	call	__ishl
	push	hl
	pop	de
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	hl, (-1900524)
	ld	(ix - 20), hl
	ld	hl, (ix - 13)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 20)
	add	hl, de
	ld	(ix - 20), hl
	ld	bc, 0
	ld	de, (ix - 9)
	ld	c, d
	ld	hl, (ix - 17)
	call	__imulu
	ld	(ix - 3), hl
	ld	c, e
	ld	b, d
	ld	hl, (ix - 13)
	ld	de, (ix - 3)
	add	hl, de
	ld	(gfy_TextXPos), hl
	ld	(ix - 13), iy
	ld	iyh, 0
	ld	de, (ix - 13)
	push	af
	ld	a, iyh
	ld	(ix - 3), a
	pop	af
	push	af
	ld	a, (ix - 14)
	ld	iyh, a
	pop	af
BB5_6:
	ld	a, (ix - 3)
	cp	a, e
	jp	nc, BB5_41
	push	af
	ld	a, iyh
	ld	(ix - 14), a
	pop	af
	ld	e, 0
BB5_8:
	ld	a, e
	cp	a, b
	jp	nc, BB5_23
	ld	(ix - 9), e
	ld	iy, (ix - 20)
	ld	d, 0
BB5_10:
	ld	a, (gfy_FontHeight)
	ld	l, a
	ld	a, d
	cp	a, l
	jr	nc, BB5_22
	ld	hl, (ix - 6)
	ld	a, (hl)
	and	a, (ix - 10)
	or	a, a
	ld	hl, gfy_Text_BG_Color
	jr	z, BB5_13
	ld	hl, gfy_Text_FG_Color
BB5_13:
	ld	e, (hl)
	ld	a, (gfy_Text_TP_Color)
	ld	l, a
	ld	a, e
	cp	a, l
	jr	nz, BB5_16
	ld	bc, 0
	ld	c, (ix - 14)
	add	iy, bc
BB5_15:
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 6), hl
	inc	d
	jr	BB5_10
BB5_16:
	ld	(ix - 17), e
	ld	e, 0
BB5_17:
	ld	a, e
	ld	l, (ix - 14)
	cp	a, l
	jr	nc, BB5_15
	ld	bc, (-1900524)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB5_21
	ld	hl, (-1900524)
	ld	bc, 76800
	add	hl, bc
	push	hl
	pop	bc
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	nc, BB5_21
	ld	a, (ix - 17)
	ld	(iy), a
	ld	a, (gfy_TextHeightScale)
	ld	(ix - 14), a
BB5_21:
	inc	iy
	inc	e
	jr	BB5_17
BB5_22:
	ld	de, 240
	ld	hl, (ix - 20)
	add	hl, de
	ld	(ix - 20), hl
	ld	a, (gfy_FontHeight)
	or	a, a
	sbc	hl, hl
	ld	l, a
	call	__ineg
	push	hl
	pop	de
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	e, (ix - 9)
	inc	e
	ld	a, (gfy_TextWidthScale)
	ld	b, a
	jp	BB5_8
BB5_23:
	ld	a, (ix - 10)
	srl	a
	ld	(ix - 10), a
	ld	a, (ix - 3)
	inc	a
	ld	(ix - 3), a
	push	af
	ld	a, (ix - 14)
	ld	iyh, a
	pop	af
	ld	de, (ix - 13)
	jp	BB5_6
BB5_24:
	ld	iy, (gfy_TextData)
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 6)
	ld	c, 3
	call	__ishl
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 6), iy
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	de, (gfy_TextYPos)
	ld	iy, (ix - 13)
	lea	hl, iy
	ld	bc, 240
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	bc, 0
	ld	de, (ix - 9)
	ld	c, d
	ld	hl, (ix - 17)
	call	__imulu
	push	hl
	pop	bc
	ld	l, e
	ld	h, d
	add	iy, bc
	ld	(gfy_TextXPos), iy
	ld	c, 0
	ld	a, c
BB5_25:
	cp	a, l
	jp	z, BB5_41
	ld	(ix - 17), a
	ld	e, c
	ld	iy, (ix - 6)
BB5_27:
	ld	a, e
	cp	a, h
	jp	nc, BB5_40
	ld	(ix - 9), hl
	ld	hl, (ix - 3)
	ld	(ix - 13), hl
	ld	b, c
BB5_29:
	ld	a, (gfy_FontHeight)
	ld	h, a
	ld	a, b
	cp	a, h
	jr	nc, BB5_39
	ld	(ix - 6), iy
	ld	a, (iy)
	and	a, (ix - 10)
	or	a, a
	ld	iy, gfy_Text_BG_Color
	jr	z, BB5_32
	ld	iy, gfy_Text_FG_Color
BB5_32:
	ld	l, (iy)
	ld	a, (gfy_Text_TP_Color)
	ld	d, a
	ld	a, l
	cp	a, d
	jr	nz, BB5_34
	ld	a, e
	ld	de, 0
	ld	e, (ix - 14)
	ld	hl, (ix - 13)
	add	hl, de
	ld	(ix - 13), hl
	ld	e, a
	ld	c, d
	ld	iy, (ix - 6)
	jr	BB5_38
BB5_34:
	ld	(ix - 20), l
	ld	c, 0
	ld	d, c
	ld	l, (ix - 14)
	ld	iy, (ix - 6)
BB5_35:
	ld	a, d
	cp	a, l
	jr	nc, BB5_37
	ld	hl, (ix - 13)
	ld	a, (ix - 20)
	ld	(hl), a
	inc	hl
	ld	(ix - 13), hl
	inc	d
	ld	a, (gfy_TextHeightScale)
	ld	l, a
	jr	BB5_35
BB5_37:
	ld	(ix - 14), l
BB5_38:
	inc	iy
	inc	b
	jr	BB5_29
BB5_39:
	ld	(ix - 6), e
	ld	de, 240
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	a, (gfy_FontHeight)
	or	a, a
	sbc	hl, hl
	ld	l, a
	call	__ineg
	push	hl
	pop	de
	add	iy, de
	ld	e, (ix - 6)
	inc	e
	ld	a, (gfy_TextWidthScale)
	ld	hl, (ix - 9)
	ld	h, a
	jp	BB5_27
BB5_40:
	ld	(ix - 6), iy
	ld	a, (ix - 10)
	srl	a
	ld	(ix - 10), a
	ld	a, (ix - 17)
	inc	a
	jp	BB5_25
BB5_41:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintInt
gfy_PrintInt:
	ld	hl, -4
	call	__frameset
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	de, 0
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB6_2
	ld	hl, 45
	push	hl
	ld	(ix - 1), a
	ld	(ix - 4), bc
	call	gfy_PrintChar
	ld	a, (ix - 1)
	pop	hl
	ld	hl, (ix - 4)
	call	__ineg
	push	hl
	pop	bc
BB6_2:
	ld	(ix + 6), bc
	ld	(ix + 9), a
	ld	sp, ix
	pop	ix
	jp	gfy_PrintUInt
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintUInt
gfy_PrintUInt:
	ld	hl, -2
	call	__frameset
	ld	d, (ix + 9)
	ld	c, 0
	ld	a, d
	or	a, a
	jp	z, BB7_21
	ld	iy, (ix + 6)
	ld	e, 8
	lea	hl, iy
BB7_2:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB7_4
	ld	a, c
	ld	bc, 10
	call	__idivs
	ld	c, a
	inc	c
	jr	BB7_2
BB7_4:
	ld	a, d
	cp	a, 8
	jr	c, BB7_6
	ld	d, e
BB7_6:
	ld	a, c
	cp	a, d
	jr	c, BB7_8
	ld	d, c
BB7_8:
	ld	hl, 48
BB7_9:
	ld	a, c
	cp	a, d
	jr	z, BB7_11
	push	hl
	ld	(ix - 1), c
	ld	(ix - 2), d
	call	gfy_PrintChar
	ld	d, (ix - 2)
	ld	c, (ix - 1)
	ld	iy, (ix + 6)
	pop	hl
	ld	hl, 48
	dec	d
	jr	BB7_9
BB7_11:
	dec	c
	ld	de, 0
	ld	a, c
	cp	a, 8
	jp	nc, BB7_21
	ld	e, c
	ld	hl, JTI7_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB7_13:
	ld	hl, 49
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_14:
	lea	hl, iy
	ld	bc, 1000000
	call	__idivu
	ld	a, l
	ld	c, 10
	call	__bremu
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_15:
	lea	hl, iy
	ld	bc, 100000
	call	__idivu
	ld	a, l
	ld	c, 10
	call	__bremu
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_16:
	lea	hl, iy
	ld	bc, 10000
	call	__idivu
	ld.sis	bc, 10
	call	__sremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_17:
	lea	hl, iy
	ld	bc, 1000
	call	__idivu
	ld.sis	bc, 10
	call	__sremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_18:
	lea	hl, iy
	ld	bc, 100
	call	__idivu
	ld	bc, 10
	call	__iremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_19:
	lea	hl, iy
	ld	bc, 10
	call	__idivu
	call	__iremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB7_20:
	lea	hl, iy
	ld	bc, 10
	call	__iremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	pop	hl
BB7_21:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits
;	section	.rodata,"a",@progbits
;	private	JTI7_0
JTI7_0:
	dl	BB7_20
	dl	BB7_19
	dl	BB7_18
	dl	BB7_17
	dl	BB7_16
	dl	BB7_15
	dl	BB7_14
	dl	BB7_13

;	section	.text,"ax",@progbits
;	public	gfy_PrintString
gfy_PrintString:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
BB8_1:
	ld	l, (iy)
	ld	a, l
	or	a, a
	jp	z, BB8_3
	push	hl
	ld	(ix - 3), iy
	call	gfy_PrintChar
	ld	iy, (ix - 3)
	pop	hl
	inc	iy
	jp	BB8_1
BB8_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintStringXY
gfy_PrintStringXY:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	push	de
	push	hl
	call	gfy_SetTextXY
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
BB9_1:
	ld	l, (iy)
	ld	a, l
	or	a, a
	jp	z, BB9_3
	push	hl
	ld	(ix - 3), iy
	call	gfy_PrintChar
	ld	iy, (ix - 3)
	pop	hl
	inc	iy
	jp	BB9_1
BB9_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Line
gfy_Line:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 9)
	ld	hl, (ix + 15)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 3), hl
	ld	hl, (ix + 12)
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	nc, BB10_3
	ld	bc, (ix + 9)
	ld	iy, (ix + 12)
	lea	hl, iy
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ex	de, hl
	lea	de, iy
	jp	p, BB10_5
	push	bc
	push	hl
	ld	hl, (ix + 15)
	push	hl
	push	de
	jr	BB10_6
BB10_3:
	ld	de, (ix + 6)
	ld	iy, (ix + 15)
	lea	hl, iy
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB10_7
	ld	bc, (ix + 9)
	push	bc
	push	de
	push	iy
	ld	hl, (ix + 12)
	push	hl
	jr	BB10_8
BB10_5:
	push	hl
	pop	iy
	ld	hl, (ix + 15)
	push	hl
	push	de
	push	bc
	push	iy
BB10_6:
	call	gfy_internal_Line0
	jr	BB10_9
BB10_7:
	push	iy
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	push	de
BB10_8:
	call	gfy_internal_Line1
BB10_9:
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line0
gfy_internal_Line0:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	ld	iy, (ix + 15)
	ld	de, -1
	ld	(ix - 15), de
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, bc
	ld	(ix - 12), hl
	lea	hl, iy
	ld	de, (ix + 9)
	ld	(ix - 9), de
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB11_2
	ld	hl, 1
	ld	(ix - 15), hl
BB11_2:
	push	bc
	pop	hl
	push	bc
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 21), hl
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 18), hl
	ld	de, (ix + 6)
	push	de
	pop	hl
	ld	bc, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB11_4
	ld	(ix - 6), de
BB11_4:
	push	de
	pop	hl
	ld	bc, 240
	call	__imulu
	ld	(ix - 12), hl
BB11_5:
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	jp	z, BB11_18
	ex	de, hl
	ld	de, (gfy_ClipXMin)
	push	hl
	pop	bc
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB11_11
	ld	de, (gfy_ClipXMax)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB11_11
	ld	de, (gfy_ClipYMin)
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB11_11
	ld	de, (gfy_ClipYMax)
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB11_11
	ld	a, (gfy_Color)
	ld	hl, (-1900524)
	ld	de, (ix - 9)
	add	hl, de
	ld	de, (ix - 12)
	add	hl, de
	ld	(hl), a
BB11_11:
	ld	hl, (ix - 3)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, -1
	jp	p, BB11_13
	ld	a, 0
BB11_13:
	bit	0, a
	ld	hl, (ix - 18)
	push	bc
	pop	de
	jr	nz, BB11_15
	ld	hl, (ix - 21)
BB11_15:
	bit	0, a
	ld	iy, (ix - 15)
	jr	nz, BB11_17
	ld	iy, 0
BB11_17:
	ld	bc, (ix - 9)
	add	iy, bc
	ld	bc, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	inc	de
	ld	bc, 240
	ld	hl, (ix - 12)
	add	hl, bc
	ld	(ix - 12), hl
	ld	(ix - 9), iy
	jp	BB11_5
BB11_18:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line1
gfy_internal_Line1:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	ld	iy, (ix + 15)
	ld	de, -1
	ld	(ix - 9), de
	ld	(ix - 3), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	lea	hl, iy
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	iy, 0
	push	bc
	pop	de
	push	bc
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB12_2
	ld	hl, 1
	ld	(ix - 9), hl
BB12_2:
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 18), hl
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 15), hl
	ld	bc, (ix + 9)
	push	bc
	pop	hl
	ld	de, (ix + 15)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB12_16
	push	bc
	pop	de
	jp	BB12_16
BB12_4:
	ld	(ix - 12), de
	push	bc
	pop	iy
	ld	de, (gfy_ClipXMin)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB12_9
	ld	de, (gfy_ClipXMax)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB12_9
	ld	de, (gfy_ClipYMin)
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB12_9
	ld	de, (gfy_ClipYMax)
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB12_9
	ld	a, (gfy_Color)
	ld	hl, (-1900524)
	ld	(ix - 21), hl
	ld	hl, (ix - 3)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 21)
	add	hl, de
	lea	de, iy
	add	hl, de
	ld	(hl), a
BB12_9:
	ld	hl, (ix - 6)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, -1
	jp	p, BB12_11
	ld	a, 0
BB12_11:
	bit	0, a
	ld	hl, (ix - 15)
	lea	bc, iy
	jr	nz, BB12_13
	ld	hl, (ix - 18)
BB12_13:
	bit	0, a
	ld	iy, (ix - 9)
	jr	nz, BB12_15
	ld	iy, 0
BB12_15:
	ld	de, (ix - 3)
	add	iy, de
	ld	de, (ix - 6)
	add	hl, de
	inc	bc
	ld	(ix - 6), hl
	ld	(ix - 3), iy
	ld	de, (ix - 12)
BB12_16:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	nz, BB12_4
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_FillCircle
gfy_FillCircle:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 12)
	ld	bc, -2
	lea	hl, iy
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	iy
	ld	de, 2
	add	iy, de
	ld	de, 0
	ld	(ix - 3), de
BB13_1:
	ld	(ix - 9), iy
	ld	hl, (ix + 6)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	bc
	pop	iy
	push	bc
	pop	hl
	ld	bc, (ix + 9)
	add	iy, bc
	ld	(ix - 12), iy
	ld	(ix - 6), hl
	ld	bc, -2
	call	__imulu
	inc	hl
	ld	(ix - 15), hl
	push	hl
	ld	hl, (ix - 12)
	push	hl
	push	de
	call	gfy_VertLine
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix + 6)
	add	hl, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 12)
	push	de
	push	hl
	call	gfy_VertLine
	ld	e, -1
	ld	b, e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB13_3
	ld	a, 0
BB13_3:
	ld	iy, (ix - 3)
	inc	iy
	lea	hl, iy
	ld	c, 1
	call	__ishl
	bit	0, a
	jr	nz, BB13_5
	ld	(ix - 3), iy
BB13_5:
	bit	0, a
	ld	iy, 0
	jr	nz, BB13_7
	inc	hl
	push	hl
	pop	iy
BB13_7:
	ld	de, (ix - 9)
	add	iy, de
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB13_9
	ld	a, 0
BB13_9:
	lea	de, iy
	ld	hl, (ix - 3)
	ld	(ix - 9), de
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	l, b
	jp	m, BB13_11
	ld	l, 0
BB13_11:
	or	a, l
	ld	de, (ix - 6)
	inc	de
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	iy
	bit	0, a
	jr	nz, BB13_13
	ld	de, (ix - 6)
BB13_13:
	bit	0, a
	jr	nz, BB13_15
	ld	iy, 0
	jr	BB13_16
BB13_15:
	inc	iy
BB13_16:
	ld	bc, (ix - 9)
	add	iy, bc
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	de
	pop	bc
	jp	m, BB13_1
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_FillRectangle
gfy_FillRectangle:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, (ix + 12)
	ld	bc, (gfy_ClipXMin)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB14_2
	ld	bc, (gfy_ClipXMin)
	add	iy, de
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 6), hl
	ld	de, 0
	jr	BB14_3
BB14_2:
	ld	(ix - 3), iy
	or	a, a
	sbc	hl, hl
	ld	(ix - 6), hl
BB14_3:
	ld	iy, (ix + 15)
	ld	bc, (gfy_ClipYMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB14_5
	ld	hl, (gfy_ClipYMin)
	ld	(ix - 9), hl
	ld	bc, (ix + 9)
	add	iy, bc
	lea	hl, iy
	ld	bc, (ix - 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	jr	BB14_6
BB14_5:
	ld	hl, (ix + 9)
	ld	(ix - 6), hl
BB14_6:
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB14_8
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
BB14_8:
	ld	(ix - 9), de
	lea	hl, iy
	ld	bc, (ix - 6)
	add	hl, bc
	ex	de, hl
	ld	hl, (gfy_ClipYMax)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB14_10
	ld	hl, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
BB14_10:
	ld	de, 1
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB14_12
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	push	iy
	ld	hl, (ix - 3)
	push	hl
	push	bc
	ld	hl, (ix - 9)
	push	hl
	call	p, gfy_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB14_12:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_FillRectangle_NoClip
gfy_FillRectangle_NoClip:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 12)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB15_2
	ld	l, (ix + 15)
	ld	de, 0
	ld	a, l
	or	a, a
	jr	nz, BB15_3
BB15_2:
	ld	sp, ix
	pop	ix
	ret
BB15_3:
	push	de
	pop	bc
	ld	c, l
	ld	(ix - 9), bc
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	e, (ix + 9)
	ld	hl, (ix + 6)
	ld	bc, 240
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
BB15_4:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB15_2
	ld	a, (gfy_Color)
	ld	l, a
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	(ix - 3), bc
	push	bc
	ld	(ix - 6), iy
	call	_memset
	ld	iy, (ix - 6)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 240
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	dec	iy
	jr	BB15_4
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Line_NoClip
gfy_Line_NoClip:
	ld	hl, -9
	call	__frameset
	ld	a, (ix + 15)
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	e, (ix + 9)
	ld	(ix - 3), hl
	ld	(ix - 9), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 6), hl
	ld	hl, (ix + 12)
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	ld	iy, (ix + 12)
	or	a, a
	sbc	hl, bc
	jr	nc, BB16_3
	lea	hl, iy
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	bc
	pop	hl
	lea	bc, iy
	jr	nc, BB16_5
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	push	bc
	jr	BB16_6
BB16_3:
	ld	hl, (ix + 6)
	ld	c, (ix + 9)
	cp	a, c
	jr	nc, BB16_7
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	push	iy
	jr	BB16_8
BB16_5:
	push	hl
	pop	iy
	ld	hl, (ix - 3)
	push	hl
	push	bc
	ld	hl, (ix - 9)
	push	hl
	push	iy
BB16_6:
	call	gfy_internal_Line0_NoClip
	jr	BB16_9
BB16_7:
	ld	bc, (ix - 3)
	push	bc
	push	iy
	ld	de, (ix - 9)
	push	de
	push	hl
BB16_8:
	call	gfy_internal_Line1_NoClip
BB16_9:
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line0_NoClip
gfy_internal_Line0_NoClip:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	ld	de, (ix + 12)
	scf
	sbc	hl, hl
	ld	(ix - 12), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), hl
	ld	hl, (ix + 15)
	ld	(ix - 3), iy
	lea	de, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB17_2
	ld	hl, 1
	ld	(ix - 12), hl
BB17_2:
	push	bc
	pop	hl
	push	bc
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 21), hl
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 15), hl
	ld	bc, (ix + 6)
	push	bc
	pop	hl
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB17_4
	push	bc
	pop	de
BB17_4:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	bc, 240
	call	__imulu
	ld	(ix - 9), hl
BB17_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_13
	ld	a, (gfy_Color)
	ld	hl, (-1900524)
	ld	bc, (ix - 3)
	add	hl, bc
	ld	bc, (ix - 9)
	add	hl, bc
	ld	(hl), a
	ld	hl, (ix - 6)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	a, -1
	jp	p, BB17_8
	ld	a, 0
BB17_8:
	bit	0, a
	ld	hl, (ix - 15)
	jr	nz, BB17_10
	ld	hl, (ix - 21)
BB17_10:
	bit	0, a
	ld	iy, (ix - 12)
	jr	nz, BB17_12
	ld	iy, 0
BB17_12:
	ld	bc, (ix - 3)
	add	iy, bc
	ld	bc, (ix - 6)
	add	hl, bc
	dec	de
	ld	(ix - 18), de
	ld	bc, 240
	ex	de, hl
	ld	hl, (ix - 9)
	add	hl, bc
	ld	(ix - 9), hl
	ld	(ix - 6), de
	ld	de, (ix - 18)
	ld	(ix - 3), iy
	jr	BB17_5
BB17_13:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line1_NoClip
gfy_internal_Line1_NoClip:
	ld	hl, -18
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	ld	iy, (ix + 15)
	ld	de, -1
	ld	(ix - 12), de
	ld	(ix - 3), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	(ix - 9), iy
	lea	hl, iy
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	iy, 0
	push	bc
	pop	de
	push	bc
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB18_2
	ld	hl, 1
	ld	(ix - 12), hl
BB18_2:
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 18), hl
	ld	de, (ix - 15)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 15), hl
	ld	de, (ix + 9)
	push	de
	pop	hl
	ld	bc, (ix + 15)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB18_11
	ld	(ix - 9), de
	jr	BB18_11
BB18_4:
	ld	a, (gfy_Color)
	ld	iy, (-1900524)
	ld	hl, (ix - 3)
	ld	bc, 240
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	add	iy, de
	push	bc
	pop	de
	add	iy, de
	ld	(iy), a
	ld	hl, (ix - 6)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	a, -1
	jp	p, BB18_6
	ld	a, 0
BB18_6:
	bit	0, a
	ld	iy, (ix - 15)
	jr	nz, BB18_8
	ld	iy, (ix - 18)
BB18_8:
	bit	0, a
	ld	hl, (ix - 12)
	jr	nz, BB18_10
	or	a, a
	sbc	hl, hl
BB18_10:
	ld	bc, (ix - 3)
	add	hl, bc
	ld	bc, (ix - 6)
	add	iy, bc
	inc	de
	ld	(ix - 6), iy
	ld	(ix - 3), hl
BB18_11:
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	jr	nz, BB18_4
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_FillCircle_NoClip
gfy_FillCircle_NoClip:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 12)
	ld	bc, -2
	lea	hl, iy
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	iy
	ld	de, 2
	add	iy, de
	ld	de, 0
	ld	(ix - 3), de
BB19_1:
	ld	(ix - 9), iy
	ld	hl, (ix + 6)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	a, c
	add	a, (ix + 9)
	ld	l, a
	ld	(ix - 12), hl
	ld	(ix - 6), bc
	push	bc
	pop	hl
	ld	bc, -2
	call	__imulu
	inc	hl
	ld	(ix - 15), hl
	push	hl
	ld	hl, (ix - 12)
	push	hl
	push	de
	call	gfy_VertLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix + 6)
	add	hl, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 12)
	push	de
	push	hl
	call	gfy_VertLine_NoClip
	ld	e, -1
	ld	b, e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB19_3
	ld	a, 0
BB19_3:
	ld	iy, (ix - 3)
	inc	iy
	lea	hl, iy
	ld	c, 1
	call	__ishl
	bit	0, a
	jr	nz, BB19_5
	ld	(ix - 3), iy
BB19_5:
	bit	0, a
	ld	iy, 0
	jr	nz, BB19_7
	inc	hl
	push	hl
	pop	iy
BB19_7:
	ld	de, (ix - 9)
	add	iy, de
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB19_9
	ld	a, 0
BB19_9:
	lea	de, iy
	ld	hl, (ix - 3)
	ld	(ix - 9), de
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	l, b
	jp	m, BB19_11
	ld	l, 0
BB19_11:
	or	a, l
	ld	de, (ix - 6)
	inc	de
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	iy
	bit	0, a
	jr	nz, BB19_13
	ld	de, (ix - 6)
BB19_13:
	bit	0, a
	jr	nz, BB19_15
	ld	iy, 0
	jr	BB19_16
BB19_15:
	inc	iy
BB19_16:
	ld	bc, (ix - 9)
	add	iy, bc
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	de
	pop	bc
	jp	m, BB19_1
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftDown
gfy_ShiftDown:
	ld	hl, -21
	call	__frameset
	ld	c, (ix + 6)
	ld	a, c
	or	a, a
	jr	z, BB20_2
	ld	de, 0
	ld	e, c
	ld	hl, (-1900524)
	ld	(ix - 6), hl
	ld	hl, (gfy_ClipYMin)
	ld	(ix - 12), hl
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 9), hl
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	hl, (gfy_ClipYMin)
	ld	(ix - 18), hl
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 15), hl
	ld	hl, (gfy_ClipXMax)
	ld	iy, (gfy_ClipXMin)
	add	iy, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	de, 1
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB20_3
BB20_2:
	ld	sp, ix
	pop	ix
	ret
BB20_3:
	ld	a, c
	rlc	a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, c
	ld	hl, (ix - 18)
	add	hl, de
	ex	de, hl
	ld	iy, (ix - 3)
	add	iy, de
	ld	hl, (ix - 15)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, (ix - 12)
	add	iy, de
	ld	hl, (ix - 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, (gfy_ClipXMin)
	ld	de, (gfy_ClipXMax)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	bc
	pop	hl
	jp	m, BB20_5
	ex	de, hl
BB20_5:
	lea	de, iy
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
BB20_6:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	ld	de, (ix - 3)
	jr	z, BB20_2
	ld	hl, (ix - 21)
	push	hl
	push	bc
	push	de
	ld	(ix - 9), iy
	ld	(ix - 3), de
	ld	(ix - 6), bc
	call	_memmove
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	add	hl, bc
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	iy, (ix - 9)
	dec	iy
	jr	BB20_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftUp
gfy_ShiftUp:
	ld	hl, -21
	call	__frameset
	ld	c, (ix + 6)
	ld	a, c
	or	a, a
	jr	z, BB21_2
	ld	de, 0
	ld	e, c
	ld	hl, (-1900524)
	ld	(ix - 6), hl
	ld	hl, (gfy_ClipYMin)
	ld	(ix - 12), hl
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 9), hl
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	hl, (gfy_ClipYMin)
	ld	(ix - 18), hl
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 15), hl
	ld	hl, (gfy_ClipXMax)
	ld	iy, (gfy_ClipXMin)
	add	iy, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	de, 1
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB21_3
BB21_2:
	ld	sp, ix
	pop	ix
	ret
BB21_3:
	ld	a, c
	rlc	a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, c
	ld	hl, (ix - 18)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	iy, (ix - 3)
	add	iy, de
	ld	hl, (ix - 15)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, (ix - 12)
	add	iy, de
	ld	hl, (ix - 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, (gfy_ClipXMin)
	ld	de, (gfy_ClipXMax)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	bc
	pop	hl
	jp	m, BB21_5
	ex	de, hl
BB21_5:
	lea	de, iy
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
BB21_6:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	ld	de, (ix - 3)
	jr	z, BB21_2
	ld	hl, (ix - 21)
	push	hl
	push	bc
	push	de
	ld	(ix - 9), iy
	ld	(ix - 3), de
	ld	(ix - 6), bc
	call	_memmove
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	add	hl, bc
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	iy, (ix - 9)
	dec	iy
	jr	BB21_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftLeft
gfy_ShiftLeft:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB22_2
BB22_1:
	ld	sp, ix
	pop	ix
	ret
BB22_2:
	ld	iy, (-1900524)
	ld	de, (gfy_ClipYMin)
	add	iy, de
	ld	hl, (gfy_ClipXMin)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	iy, (-1900524)
	ld	de, (gfy_ClipYMin)
	add	iy, de
	ld	hl, (gfy_ClipXMin)
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (gfy_ClipYMax)
	ld	de, (gfy_ClipYMin)
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	de, (gfy_ClipXMax)
	push	bc
	pop	hl
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	add	iy, bc
	ld	bc, (ix - 6)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB22_4
	push	bc
	pop	de
BB22_4:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
BB22_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB22_1
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	push	iy
	ld	(ix - 6), de
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix - 12)
	add	iy, de
	ld	de, (ix - 6)
	dec	de
	jr	BB22_5
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftRight
gfy_ShiftRight:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB23_2
BB23_1:
	ld	sp, ix
	pop	ix
	ret
BB23_2:
	ld	iy, (-1900524)
	ld	de, (gfy_ClipYMin)
	add	iy, de
	ld	hl, (gfy_ClipXMin)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	iy, (-1900524)
	ld	de, (gfy_ClipYMin)
	add	iy, de
	ld	hl, (gfy_ClipXMin)
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (gfy_ClipYMax)
	ld	de, (gfy_ClipYMin)
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	de, (gfy_ClipXMax)
	push	bc
	pop	hl
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	add	iy, bc
	ld	bc, (ix - 6)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB23_4
	push	bc
	pop	de
BB23_4:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
BB23_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB23_1
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	push	iy
	ld	(ix - 6), de
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix - 12)
	add	iy, de
	ld	de, (ix - 6)
	dec	de
	jr	BB23_5
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Tilemap
gfy_Tilemap:
	ld	hl, -39
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	xor	a, a
	ld	(ix - 22), a
	ld	de, 0
	ld	e, (iy + 7)
	push	de
	pop	bc
	call	__idivu
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 6)
	push	hl
	pop	iy
	ld	hl, (ix + 12)
	lea	bc, iy
	call	__idivu
	ld	(ix - 6), hl
	ld	hl, (ix - 3)
	ld	(ix - 12), de
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	hl, (ix - 6)
	ld	(ix - 15), iy
	lea	bc, iy
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), hl
	push	de
	pop	hl
	push	de
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB24_2
	ld	a, 0
	jr	BB24_3
BB24_2:
	ld	a, -1
BB24_3:
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	de, (ix - 12)
	push	bc
	pop	iy
	add	iy, de
	bit	0, a
	ld	bc, 0
	jr	nz, BB24_5
	lea	bc, iy
BB24_5:
	or	a, a
	sbc	hl, bc
	ld	(ix - 21), hl
	ld	bc, 0
	ld	iy, (ix + 6)
	ld	c, (iy + 14)
	ld	hl, (ix - 9)
	push	hl
	pop	iy
	ld	de, (ix - 15)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB24_7
	lea	de, iy
BB24_7:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 18), hl
	ld	iy, (ix + 6)
	ld	c, (iy + 9)
	bit	0, a
	jr	nz, BB24_12
	ld	hl, (ix + 9)
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	jr	nc, BB24_10
	ld	hl, (ix - 21)
	add	hl, de
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, hl
	jr	BB24_11
BB24_10:
	inc	c
	ld	hl, (ix - 3)
	dec	hl
BB24_11:
	ld	(ix - 3), hl
BB24_12:
	ld	iy, (ix + 6)
	ld	e, (iy + 8)
	ld	hl, (ix - 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB24_17
	ld	a, c
	ld	hl, (ix + 12)
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	nc, BB24_15
	ld	hl, (ix - 18)
	add	hl, bc
	ld	(ix - 18), hl
	or	a, a
	sbc	hl, hl
	jr	BB24_16
BB24_15:
	inc	e
	ld	hl, (ix - 6)
	dec	hl
BB24_16:
	ld	(ix - 6), hl
	ld	c, a
BB24_17:
	ld	a, c
	or	a, a
	jr	z, BB24_19
	ld	a, e
	or	a, a
	jr	nz, BB24_20
BB24_19:
	ld	sp, ix
	pop	ix
	ret
BB24_20:
	ld	(ix - 23), e
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	(ix - 9), c
	ld	l, c
	ld	(ix - 29), hl
	push	de
	pop	bc
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	c, (iy + 13)
	ex	de, hl
	ld	l, (iy + 12)
	call	__imulu
	ld	(ix - 26), hl
	ld	hl, (ix - 6)
	call	__imulu
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	push	bc
	pop	hl
	ld	de, (ix - 29)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 11)
	dec	a
	cp	a, 7
	jr	nc, BB24_22
	ld	iy, _switch.table.gfy_Tilemap_NoClip
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	jr	BB24_23
BB24_22:
	ld	hl, gfy_Sprite_NoClip
BB24_23:
	ld	(ix - 29), hl
	ld	de, (ix - 12)
	ld	bc, (ix - 15)
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	hl, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	ld	c, (ix - 9)
	ld	b, (ix - 23)
BB24_24:
	ld	a, (ix - 22)
	cp	a, b
	jp	z, BB24_19
	ld	hl, (ix - 18)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), de
	jp	nc, BB24_35
	ld	iyl, b
	ld	a, c
	ld	hl, (ix - 26)
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	c, BB24_28
	ld	bc, (ix - 26)
BB24_28:
	ld	(ix - 35), bc
	ld	c, a
	ld	iyh, c
	ld	hl, (ix - 21)
	ld	(ix - 32), hl
	ld	b, iyl
BB24_29:
	ld	a, iyh
	or	a, a
	jp	z, BB24_41
	ld	hl, (ix - 35)
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jp	z, BB24_19
	push	af
	ld	a, iyh
	ld	(ix - 36), a
	pop	af
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 3)
	ld	(ix - 39), hl
	ld	iy, (iy)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 39)
	add	hl, de
	ld	iy, (hl)
	ld	de, (ix - 32)
	push	de
	pop	hl
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	ld	(ix - 32), de
	jr	nc, BB24_33
	ld	hl, (ix - 18)
	push	hl
	push	de
	push	iy
	ld	hl, (ix - 29)
	call	__indcallhl
	jr	BB24_34
BB24_33:
	ld	hl, (ix - 18)
	push	hl
	push	de
	push	iy
	call	gfy_Sprite
BB24_34:
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	hl, (ix - 32)
	add	hl, de
	ld	(ix - 32), hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	push	af
	ld	a, (ix - 36)
	ld	iyh, a
	pop	af
	dec	iyh
	ld	c, (ix - 9)
	ld	b, (ix - 23)
	ld	de, (ix - 12)
	jp	BB24_29
BB24_35:
	ld	hl, (ix - 26)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	(ix - 32), de
	jr	c, BB24_37
	ld	hl, (ix - 26)
	ld	(ix - 32), hl
BB24_37:
	ld	l, c
	ld	de, (ix - 21)
	ld	(ix - 35), de
BB24_38:
	ld	a, l
	or	a, a
	jr	z, BB24_41
	ld	(ix - 36), l
	ld	hl, (ix - 32)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	jp	z, BB24_19
	ld	iy, (ix + 6)
	ld	hl, (iy + 3)
	ld	(ix - 39), hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 39)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 18)
	push	de
	ld	de, (ix - 35)
	push	de
	push	hl
	call	gfy_Sprite
	ld	b, (ix - 23)
	ld	c, (ix - 9)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	hl, (ix - 35)
	add	hl, de
	ld	(ix - 35), hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	l, (ix - 36)
	dec	l
	jr	BB24_38
BB24_41:
	ld	hl, (ix - 6)
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 6)
	ld	hl, (ix - 18)
	add	hl, de
	ld	(ix - 18), hl
	ld	a, (ix - 22)
	inc	a
	ld	(ix - 22), a
	ld	de, (ix - 12)
	jp	BB24_24
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Sprite_NoClip
gfy_Sprite_NoClip:
	ld	hl, -10
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 6), iy
	ld	iy, (ix + 6)
	ld	c, (iy + 1)
BB25_1:
	ld	a, c
	or	a, a
	jr	z, BB25_3
	ld	de, 0
	ld	(ix - 7), c
	ld	hl, (ix + 6)
	ld	e, (hl)
	ld	(ix - 10), de
	push	de
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	c, (ix - 7)
	ld	de, (ix - 10)
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 240
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	dec	c
	jr	BB25_1
BB25_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size2
gfy_Sprite_NoClip_Size2:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy
	ld	iy, (ix + 6)
	ld	c, (iy + 1)
BB26_1:
	ld	a, c
	or	a, a
	jr	z, BB26_3
	ld	iy, (ix - 3)
	ld	de, (iy)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	dec	hl
	lea	iy, iy + 2
	ld	(ix - 3), iy
	ld	de, 240
	add	hl, de
	dec	c
	jr	BB26_1
BB26_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size4
gfy_Sprite_NoClip_Size4:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 6)
	ld	c, (iy + 1)
BB27_1:
	ld	a, c
	or	a, a
	jr	z, BB27_3
	ld	iy, (ix - 3)
	ld	(ix - 3), iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	(iy), hl
	ld	(iy + 3), a
	lea	hl, iy
	ld	iy, (ix - 3)
	lea	iy, iy + 4
	ld	(ix - 3), iy
	ld	de, 240
	add	hl, de
	ex	de, hl
	dec	c
	jr	BB27_1
BB27_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size8
gfy_Sprite_NoClip_Size8:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
BB28_1:
	ld	a, l
	or	a, a
	jr	z, BB28_3
	ld	iy, (ix - 3)
	ld	(ix - 3), iy
	ld	bc, (iy)
	ld	(ix - 9), bc
	ld	bc, (iy + 3)
	ld	(ix - 6), bc
	ld	bc, (iy + 6)
	ld	(ix - 12), bc
	push	de
	pop	bc
	ld	a, l
	push	bc
	pop	hl
	ld	de, (ix - 9)
	ld	(hl), de
	push	bc
	pop	iy
	ld	hl, (ix - 6)
	ld	(iy + 3), hl
	ld	hl, (ix - 12)
	ld	(iy + 6), l
	ld	(iy + 7), h
	ld	iy, (ix - 3)
	lea	iy, iy + 8
	ld	(ix - 3), iy
	ld	de, 240
	push	bc
	pop	hl
	add	hl, de
	ex	de, hl
	ld	l, a
	dec	l
	jr	BB28_1
BB28_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size16
gfy_Sprite_NoClip_Size16:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
BB29_1:
	ld	a, l
	or	a, a
	jr	z, BB29_3
	ld	(ix - 6), de
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 16
	ldir
	ld	l, a
	lea	iy, iy + 16
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, 240
	add	iy, de
	lea	de, iy
	dec	l
	jr	BB29_1
BB29_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size32
gfy_Sprite_NoClip_Size32:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
BB30_1:
	ld	a, l
	or	a, a
	jr	z, BB30_3
	ld	(ix - 6), de
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 32
	ldir
	ld	l, a
	lea	iy, iy + 32
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, 240
	add	iy, de
	lea	de, iy
	dec	l
	jr	BB30_1
BB30_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size64
gfy_Sprite_NoClip_Size64:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
BB31_1:
	ld	a, l
	or	a, a
	jr	z, BB31_3
	ld	(ix - 6), de
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	l, a
	lea	iy, iy + 64
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, 240
	add	iy, de
	lea	de, iy
	dec	l
	jr	BB31_1
BB31_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size128
gfy_Sprite_NoClip_Size128:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 6)
	ld	c, (iy + 1)
BB32_1:
	ld	a, c
	or	a, a
	jr	z, BB32_3
	ld	(ix - 6), de
	ld	iy, (ix - 3)
	ld	a, c
	lea	hl, iy
	ld	bc, 128
	ldir
	ld	c, a
	ld	de, 128
	add	iy, de
	ld	(ix - 3), iy
	ld	de, 240
	ld	hl, (ix - 6)
	add	hl, de
	ex	de, hl
	dec	c
	jr	BB32_1
BB32_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Sprite
gfy_Sprite:
	ld	hl, -21
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, 0
	ld	bc, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB33_6
	ld	hl, (ix + 12)
	ld	bc, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB33_6
	ld	iy, (ix + 6)
	ld	c, (iy + 1)
	or	a, a
	sbc	hl, hl
	ld	a, c
	or	a, a
	jr	z, BB33_6
	ld	a, (iy)
	ld	(ix - 3), a
	or	a, a
	jr	z, BB33_6
	ld	l, c
	ld	(ix - 9), c
	ld	bc, (ix + 9)
	add	hl, bc
	ld	bc, (gfy_ClipXMin)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	call	pe, __setflag
	jp	m, BB33_6
	ld	l, (ix - 3)
	ld	(ix - 15), hl
	ld	bc, (ix + 12)
	add	hl, bc
	ld	bc, (gfy_ClipYMin)
	ld	(ix - 18), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB33_7
BB33_6:
	ld	sp, ix
	pop	ix
	ret
BB33_7:
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB33_11
	ld	bc, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB33_11
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB33_11
	ld	hl, (gfy_ClipYMax)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB33_22
BB33_11:
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	(ix - 12), de
	jp	p, BB33_13
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
	ld	(ix - 12), hl
BB33_13:
	ld	bc, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	de
	pop	hl
	jp	p, BB33_15
	ld	hl, (gfy_ClipYMin)
	ld	bc, (ix + 12)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
BB33_15:
	ld	(ix - 21), hl
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	de
	pop	hl
	jp	p, BB33_17
	push	bc
	pop	hl
	ld	bc, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
BB33_17:
	ld	(ix - 6), hl
	ld	hl, (gfy_ClipYMax)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB33_19
	ld	de, (gfy_ClipYMax)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	bc, 255
	call	__iand
	push	hl
	pop	de
BB33_19:
	ld	hl, (ix - 6)
	ld	a, l
	ld	hl, (ix - 12)
	add	a, l
	ld	(ix - 12), hl
	ld	c, a
	ld	a, (ix - 9)
	sub	a, c
	ld	(ix - 6), a
	ld	a, e
	ld	bc, (ix - 21)
	add	a, c
	ld	e, a
	ld	a, (ix - 3)
	sub	a, e
	push	bc
	pop	de
	add	iy, de
	ld	bc, (ix - 15)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy + 2
	ld	(ix - 3), hl
	ld	iy, (-1900524)
	ld	de, (ix + 12)
	ld	hl, (ix - 21)
	add	hl, de
	ex	de, hl
	add	iy, de
	ld	de, (ix + 9)
	ld	hl, (ix - 12)
	add	hl, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	ld	c, (ix - 6)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 9), hl
BB33_20:
	ld	a, c
	or	a, a
	jp	z, BB33_6
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	push	iy
	ld	(ix - 6), c
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	c, (ix - 6)
	ld	de, (ix - 15)
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 240
	ld	iy, (ix - 12)
	add	iy, de
	dec	c
	jr	BB33_20
BB33_22:
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	push	iy
	call	gfy_Sprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	jp	BB33_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Tilemap_NoClip
gfy_Tilemap_NoClip:
	ld	hl, -25
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, 0
	push	de
	pop	bc
	ld	iy, (ix + 6)
	ld	c, (iy + 7)
	ld	(ix - 6), bc
	call	__idivu
	ld	(ix - 22), hl
	push	de
	pop	hl
	ld	iy, (ix + 6)
	ld	l, (iy + 6)
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	hl, (ix + 12)
	call	__idivu
	ld	(ix - 16), hl
	ld	iy, (ix + 6)
	ld	e, (iy + 13)
	ld	(ix - 10), de
	push	de
	pop	bc
	call	__imulu
	ld	de, (ix - 22)
	add	hl, de
	ld	(ix - 13), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 9)
	or	a, a
	sbc	hl, hl
	ld	(ix - 7), a
	ld	l, a
	ld	(ix - 19), hl
	ld	hl, (iy + 15)
	ld	(ix - 25), hl
	ex	de, hl
	ld	bc, (ix - 6)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 25)
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	ld	hl, (ix - 16)
	ld	h, l
	ld	de, (ix - 3)
	ld	l, e
	mlt	hl
	ld	de, (ix + 12)
	ld	a, e
	sub	a, l
	ld	l, a
	ld	a, (iy + 14)
	sub	a, l
	ld	l, a
	ld	(ix - 3), hl
	ld	a, (iy + 11)
	dec	a
	cp	a, 7
	jr	nc, BB34_2
	ld	iy, _switch.table.gfy_Tilemap_NoClip
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 16), hl
	ld	iy, (ix + 6)
	jr	BB34_3
BB34_2:
	ld	hl, gfy_Sprite_NoClip
	ld	(ix - 16), hl
BB34_3:
	ld	hl, (ix - 10)
	ld	de, (ix - 19)
	or	a, a
	sbc	hl, de
	ld	(ix - 19), hl
	ld	bc, (ix - 13)
	ld	e, 0
	ld	a, e
	ld	d, (ix - 7)
BB34_4:
	ld	l, (iy + 8)
	ld	(ix - 7), a
	cp	a, l
	ld	hl, (ix - 6)
	ld	a, e
	jr	nc, BB34_8
BB34_5:
	ld	(ix - 13), a
	cp	a, d
	jr	nc, BB34_7
	ld	de, (iy + 3)
	ld	(ix - 25), de
	ld	(ix - 10), hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	(ix - 22), bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 25)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 3)
	push	de
	ld	de, (ix - 10)
	push	de
	push	hl
	ld	hl, (ix - 16)
	call	__indcallhl
	ld	bc, (ix - 22)
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 10)
	ld	de, 0
	ld	e, (iy + 7)
	add	hl, de
	ld	e, d
	inc	bc
	ld	a, (ix - 13)
	inc	a
	ld	d, (iy + 9)
	jr	BB34_5
BB34_7:
	ld	hl, (ix - 19)
	add	hl, bc
	ld	a, (iy + 6)
	ld	bc, (ix - 3)
	add	a, c
	ld	c, a
	ld	(ix - 3), bc
	ld	a, (ix - 7)
	inc	a
	push	hl
	pop	bc
	jp	BB34_4
BB34_8:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentTilemap
gfy_TransparentTilemap:
	ld	hl, -34
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, 0
	ld	e, (iy + 7)
	push	de
	pop	bc
	call	__idivu
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 6)
	push	hl
	pop	iy
	ld	hl, (ix + 12)
	lea	bc, iy
	call	__idivu
	ld	(ix - 3), hl
	ld	hl, (ix - 9)
	ld	(ix - 12), de
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	hl, (ix - 3)
	ld	(ix - 6), iy
	lea	bc, iy
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 19), hl
	push	de
	pop	hl
	push	de
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB35_2
	ld	a, 0
	jr	BB35_3
BB35_2:
	ld	a, -1
BB35_3:
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	de, (ix - 12)
	push	bc
	pop	iy
	add	iy, de
	bit	0, a
	ld	bc, 0
	jr	nz, BB35_5
	lea	bc, iy
BB35_5:
	or	a, a
	sbc	hl, bc
	ld	(ix - 23), hl
	ld	bc, 0
	ld	iy, (ix + 6)
	ld	c, (iy + 14)
	ld	hl, (ix - 19)
	push	hl
	pop	iy
	ld	de, (ix - 6)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB35_7
	lea	de, iy
BB35_7:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	iy, (ix + 6)
	ld	l, (iy + 9)
	ld	(ix - 16), l
	bit	0, a
	jr	z, BB35_9
	ld	bc, (ix - 6)
	jr	BB35_13
BB35_9:
	ld	hl, (ix + 9)
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 6)
	jr	nc, BB35_11
	ld	hl, (ix - 23)
	add	hl, de
	ld	(ix - 23), hl
	or	a, a
	sbc	hl, hl
	jr	BB35_12
BB35_11:
	ld	a, (ix - 16)
	inc	a
	ld	(ix - 16), a
	ld	hl, (ix - 9)
	dec	hl
BB35_12:
	ld	(ix - 9), hl
BB35_13:
	ld	iy, (ix + 6)
	ld	a, (iy + 8)
	ld	(ix - 20), a
	ld	hl, (ix - 19)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jr	z, BB35_17
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	jr	nc, BB35_16
	ld	hl, (ix - 15)
	add	hl, bc
	ld	(ix - 15), hl
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	jr	BB35_17
BB35_16:
	ld	a, (ix - 20)
	inc	a
	ld	(ix - 20), a
	dec	de
	ld	(ix - 3), de
BB35_17:
	ld	de, 0
	push	de
	pop	bc
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	c, (iy + 13)
	ex	de, hl
	ld	l, (iy + 12)
	call	__imulu
	ld	(ix - 19), hl
	ld	hl, (ix - 3)
	call	__imulu
	push	hl
	pop	iy
	ld	de, (ix - 9)
	add	iy, de
	ld	de, 0
	ld	e, (ix - 16)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	hl, (gfy_ClipXMax)
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	hl, (gfy_ClipYMax)
	ld	de, (ix - 6)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	(ix - 3), iy
	ld	c, 0
BB35_18:
	ld	a, c
	ld	l, (ix - 20)
	cp	a, l
	jp	z, BB35_37
	ld	hl, (ix - 15)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), de
	jp	nc, BB35_29
	ld	hl, (ix - 19)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	de
	pop	iy
	jr	c, BB35_22
	ld	iy, (ix - 19)
BB35_22:
	ld	b, (ix - 16)
	ld	hl, (ix - 23)
	ld	(ix - 26), hl
	ld	de, (ix - 6)
BB35_23:
	ld	a, b
	or	a, a
	jp	z, BB35_36
	lea	hl, iy
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 6)
	jp	z, BB35_37
	ld	(ix - 31), b
	ld	(ix - 30), iy
	ld	(ix - 27), c
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 3)
	ld	(ix - 34), hl
	ld	iy, (iy)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 34)
	add	hl, de
	ld	iy, (hl)
	ld	de, (ix - 26)
	push	de
	pop	hl
	ld	bc, (ix - 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 26), de
	jr	nc, BB35_27
	ld	hl, (ix - 15)
	push	hl
	push	de
	push	iy
	call	gfy_TransparentSprite_NoClip
	jr	BB35_28
BB35_27:
	ld	hl, (ix - 15)
	push	hl
	push	de
	push	iy
	call	gfy_TransparentSprite
BB35_28:
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	hl, (ix - 26)
	add	hl, de
	ld	(ix - 26), hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	b, (ix - 31)
	dec	b
	ld	c, (ix - 27)
	ld	de, (ix - 6)
	ld	iy, (ix - 30)
	jp	BB35_23
BB35_29:
	ld	(ix - 27), c
	ld	hl, (ix - 19)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	(ix - 26), de
	jr	c, BB35_31
	ld	hl, (ix - 19)
	ld	(ix - 26), hl
BB35_31:
	ld	c, (ix - 16)
	ld	hl, (ix - 23)
BB35_32:
	ld	a, c
	or	a, a
	jr	z, BB35_35
	ld	(ix - 30), hl
	ld	hl, (ix - 26)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	jr	z, BB35_37
	ld	iy, (ix + 6)
	ld	hl, (iy + 3)
	ld	(ix - 34), hl
	ld	(ix - 31), c
	ld	hl, (ix + 6)
	ld	iy, (hl)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 34)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 30)
	push	de
	push	hl
	call	gfy_TransparentSprite
	ld	c, (ix - 31)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 30)
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	add	hl, de
	ld	de, (ix - 3)
	inc	de
	ld	(ix - 3), de
	dec	c
	jr	BB35_32
BB35_35:
	ld	c, (ix - 27)
BB35_36:
	ld	hl, (ix - 9)
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 6)
	ld	hl, (ix - 15)
	add	hl, de
	ld	(ix - 15), hl
	inc	c
	ld	de, (ix - 6)
	jp	BB35_18
BB35_37:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentSprite_NoClip
gfy_TransparentSprite_NoClip:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	xor	a, a
	lea	de, iy + 2
	ld	(ix - 9), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	e, (hl)
	ld	hl, 240
	ld	(ix - 6), de
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	c, a
	ld	d, c
BB36_1:
	ld	l, (iy + 1)
	ld	a, d
	cp	a, l
	ld	e, c
	jr	nc, BB36_7
BB36_2:
	ld	a, e
	ld	hl, (ix - 6)
	cp	a, l
	jr	nc, BB36_6
	ld	a, (gfy_Transparent_Color)
	ld	l, a
	ld	iy, (ix - 9)
	ld	a, (iy)
	cp	a, l
	ld	hl, (ix - 3)
	jr	z, BB36_5
	lea	hl, iy
BB36_5:
	ld	a, (hl)
	ld	hl, (ix - 3)
	ld	(hl), a
	inc	iy
	ld	(ix - 9), iy
	inc	hl
	ld	(ix - 3), hl
	inc	e
	ld	hl, (ix + 6)
	ld	l, (hl)
	ld	(ix - 6), hl
	ld	c, 0
	jr	BB36_2
BB36_6:
	ld	hl, (ix - 3)
	ld	a, d
	ld	de, (ix - 12)
	add	hl, de
	ld	d, a
	ld	(ix - 3), hl
	inc	d
	ld	iy, (ix + 6)
	jr	BB36_1
BB36_7:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentSprite
gfy_TransparentSprite:
	ld	hl, -19
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, (gfy_ClipXMax)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB37_6
	ld	hl, (ix + 12)
	ld	bc, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB37_6
	ld	iy, (ix + 6)
	ld	c, (iy + 1)
	or	a, a
	sbc	hl, hl
	ld	a, c
	or	a, a
	jr	z, BB37_6
	ld	a, (iy)
	ld	(ix - 3), a
	or	a, a
	jr	z, BB37_6
	ld	l, c
	add	hl, de
	ld	(ix - 7), c
	ld	bc, (gfy_ClipXMin)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	call	pe, __setflag
	jp	m, BB37_6
	push	hl
	pop	iy
	push	af
	ld	a, (ix - 3)
	ld	iyl, a
	pop	af
	lea	hl, iy
	ld	bc, (ix + 12)
	add	hl, bc
	ld	bc, (gfy_ClipYMin)
	ld	(ix - 13), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB37_7
BB37_6:
	ld	sp, ix
	pop	ix
	ret
BB37_7:
	ld	bc, (gfy_ClipXMin)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB37_11
	ld	bc, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB37_11
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB37_11
	ld	hl, (gfy_ClipYMax)
	ld	bc, (ix - 13)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB37_27
BB37_11:
	ld	(ix - 19), iy
	ld	bc, (gfy_ClipXMin)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	iy, 0
	ld	(ix - 10), iy
	jp	p, BB37_13
	ld	hl, (gfy_ClipXMin)
	or	a, a
	sbc	hl, de
	ld	bc, 255
	call	__iand
	ld	(ix - 10), hl
BB37_13:
	ld	bc, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	hl, iy
	jp	p, BB37_15
	ld	hl, (gfy_ClipYMin)
	ld	bc, (ix + 12)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
BB37_15:
	ld	(ix - 16), hl
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	hl, iy
	jp	p, BB37_17
	push	bc
	pop	hl
	ld	bc, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
BB37_17:
	ld	(ix - 6), hl
	ld	hl, (gfy_ClipYMax)
	ld	bc, (ix - 13)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB37_19
	push	bc
	pop	hl
	ld	bc, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
	push	hl
	pop	iy
BB37_19:
	ld	hl, (ix - 6)
	ld	a, l
	ld	hl, (ix - 10)
	add	a, l
	ld	l, a
	ld	a, (ix - 7)
	sub	a, l
	ld	(ix - 7), a
	ld	bc, (ix - 16)
	add	iy, bc
	ld	(ix - 13), iy
	ld	a, (ix - 3)
	sub	a, iyl
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 6), hl
	ld	iy, (ix + 6)
	add	iy, bc
	ld	hl, (ix - 10)
	ld	bc, (ix - 19)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	lea	hl, iy + 2
	ld	(ix - 19), hl
	ld	iy, (-1900524)
	ld	bc, (ix + 12)
	ld	hl, (ix - 16)
	add	hl, bc
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (ix - 10)
	add	hl, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	iy, (ix - 19)
	push	bc
	pop	hl
	ld	de, (ix - 6)
	or	a, a
	sbc	hl, de
	ld	(ix - 10), hl
	ld	hl, (ix - 13)
	ld	bc, 255
	call	__iand
	ld	(ix - 13), hl
	ld	l, (ix - 7)
	inc	c
BB37_20:
	ld	a, c
	cp	a, l
	jp	z, BB37_6
	ld	hl, (ix - 6)
	ld	e, l
BB37_22:
	ld	a, e
	or	a, a
	jr	z, BB37_26
	ld	a, (gfy_Transparent_Color)
	ld	h, a
	ld	a, (iy)
	cp	a, h
	ld	hl, (ix - 3)
	jr	z, BB37_25
	lea	hl, iy
BB37_25:
	ld	a, (hl)
	ld	hl, (ix - 3)
	ld	(hl), a
	inc	iy
	inc	hl
	ld	(ix - 3), hl
	dec	e
	ld	hl, (ix - 6)
	jr	BB37_22
BB37_26:
	ld	de, (ix - 13)
	add	iy, de
	ld	hl, (ix - 3)
	ld	de, (ix - 10)
	add	hl, de
	ld	(ix - 3), hl
	inc	c
	ld	l, (ix - 7)
	jr	BB37_20
BB37_27:
	ld	hl, (ix + 12)
	push	hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	gfy_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	jp	BB37_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentTilemap_NoClip
gfy_TransparentTilemap_NoClip:
	ld	hl, -22
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, 0
	push	bc
	pop	iy
	ld	e, (iy + 7)
	ld	(ix - 22), de
	push	de
	pop	bc
	call	__idivu
	ld	(ix - 6), hl
	ld	de, 0
	push	de
	pop	hl
	ld	l, (iy + 6)
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	hl, (ix + 12)
	call	__idivu
	ld	(ix - 16), hl
	ld	e, (iy + 13)
	push	de
	pop	bc
	call	__imulu
	ld	bc, (ix - 6)
	add	hl, bc
	ld	(ix - 9), hl
	ld	a, (iy + 9)
	ld	(ix - 13), a
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 12), hl
	ld	hl, (iy + 15)
	ld	(ix - 19), hl
	push	bc
	pop	hl
	ld	bc, (ix - 22)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 19)
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	ld	hl, (ix - 16)
	ld	h, l
	ld	bc, (ix - 3)
	ld	l, c
	mlt	hl
	ld	bc, (ix + 12)
	ld	a, c
	sub	a, l
	ld	l, a
	ld	a, (iy + 14)
	sub	a, l
	ld	l, a
	ld	(ix - 3), hl
	ex	de, hl
	ld	d, (ix - 13)
	ld	e, 0
	ld	bc, (ix - 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 16), hl
	ld	bc, (ix - 9)
	ld	a, e
BB38_1:
	ld	l, (iy + 8)
	ld	(ix - 9), a
	cp	a, l
	ld	hl, (ix - 6)
	ld	a, e
	jr	nc, BB38_5
BB38_2:
	ld	(ix - 13), a
	cp	a, d
	jr	nc, BB38_4
	ld	de, (iy + 3)
	ld	(ix - 22), de
	ld	(ix - 12), hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	(ix - 19), bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 22)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 3)
	push	de
	ld	de, (ix - 12)
	push	de
	push	hl
	call	gfy_TransparentSprite_NoClip
	ld	bc, (ix - 19)
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 12)
	ld	de, 0
	ld	e, (iy + 7)
	add	hl, de
	ld	e, d
	inc	bc
	ld	a, (ix - 13)
	inc	a
	ld	d, (iy + 9)
	jr	BB38_2
BB38_4:
	ld	hl, (ix - 16)
	add	hl, bc
	ld	a, (iy + 6)
	ld	bc, (ix - 3)
	add	a, c
	ld	c, a
	ld	(ix - 3), bc
	ld	a, (ix - 9)
	inc	a
	push	hl
	pop	bc
	jr	BB38_1
BB38_5:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_GetSprite
gfy_GetSprite:
	ld	hl, -10
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 12)
	ld	bc, 240
	xor	a, a
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ex	de, hl
	add	iy, de
	ld	hl, (ix + 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
BB39_1:
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
	ld	(ix - 4), a
	cp	a, l
	jr	nc, BB39_3
	ld	bc, 0
	ld	hl, (ix + 6)
	ld	c, (hl)
	ld	(ix - 7), bc
	push	bc
	ld	(ix - 10), de
	push	de
	ld	hl, (ix - 3)
	push	hl
	call	_memcpy
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 240
	ld	hl, (ix - 10)
	add	hl, de
	ex	de, hl
	ld	bc, (ix - 7)
	ld	c, (iy)
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	a, (ix - 4)
	inc	a
	jr	BB39_1
BB39_3:
	ld	hl, (ix + 6)
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ScaledSprite_NoClip
gfy_ScaledSprite_NoClip:
	ld	hl, -21
	call	__frameset
	ld	c, (ix + 15)
	or	a, a
	sbc	hl, hl
	ld	a, c
	or	a, a
	jp	z, BB40_12
	ld	b, (ix + 18)
	ld	a, b
	or	a, a
	jp	z, BB40_12
	push	hl
	pop	iy
	ld	l, c
	ld	(ix - 6), hl
	lea	de, iy
	lea	hl, iy
	ld	e, b
	ld	iy, (ix + 6)
	lea	bc, iy + 2
	ld	(ix - 9), bc
	ld	iy, (-1900524)
	push	hl
	pop	bc
	ld	c, (ix + 12)
	ld	(ix - 18), bc
	add	iy, bc
	ld	hl, (ix + 9)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 21), bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	ld	hl, (ix - 6)
	ld	bc, 240
	call	__imulu
	ld	(ix - 12), hl
	ld	a, (iy)
	ld	(ix - 6), a
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 15), de
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, bc
	ld	b, 0
	ld	(ix - 12), hl
BB40_3:
	ld	d, (iy + 1)
	ld	a, b
	cp	a, d
	jr	nc, BB40_11
	ld	c, 0
	ld	iy, (ix - 9)
BB40_5:
	ld	a, c
	ld	l, (ix - 6)
	cp	a, l
	jr	nc, BB40_10
	ld	d, (iy)
	ld	e, (ix + 18)
BB40_7:
	ld	a, e
	or	a, a
	jr	z, BB40_9
	ld	hl, (ix - 3)
	ld	(hl), d
	inc	hl
	ld	(ix - 3), hl
	dec	e
	jr	BB40_7
BB40_9:
	inc	iy
	inc	c
	ld	hl, (ix + 6)
	ld	a, (hl)
	ld	(ix - 6), a
	jr	BB40_5
BB40_10:
	ld	(ix - 9), iy
	ld	hl, (ix - 3)
	ld	de, (ix - 12)
	add	hl, de
	ld	(ix - 3), hl
	inc	b
	ld	iy, (ix + 6)
	jr	BB40_3
BB40_11:
	ld	a, (ix + 15)
	cp	a, 1
	ld	hl, 0
	jr	nz, BB40_13
BB40_12:
	ld	sp, ix
	pop	ix
	ret
BB40_13:
	ld	iy, (-1900524)
	ld	bc, (ix - 18)
	add	iy, bc
	ld	bc, (ix - 21)
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	ld	l, (ix - 6)
	ld	bc, (ix - 15)
	call	__imulu
	ld	c, 0
	ld	b, (ix + 15)
	ld	(ix - 15), hl
	dec	b
BB40_14:
	ld	a, c
	cp	a, d
	jr	nc, BB40_12
	ld	hl, (ix - 3)
	ld	de, 240
	add	hl, de
	ld	e, b
BB40_16:
	ld	a, e
	or	a, a
	jr	z, BB40_18
	ld	(ix - 6), hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	(ix - 9), b
	ld	(ix - 12), c
	ld	(ix - 18), e
	call	_memcpy
	ld	iy, (ix + 6)
	ld	c, (ix - 12)
	ld	b, (ix - 9)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	ld	de, 240
	add	hl, de
	ld	e, (ix - 18)
	dec	e
	jr	BB40_16
BB40_18:
	inc	c
	ld	d, (iy + 1)
	ld	(ix - 3), hl
	jr	BB40_14
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ScaledTransparentSprite_NoClip
gfy_ScaledTransparentSprite_NoClip:
	ld	hl, -14
	call	__frameset
	ld	a, (ix + 15)
	or	a, a
	jr	z, BB41_2
	ld	a, (ix + 18)
	or	a, a
	jr	nz, BB41_3
BB41_2:
	ld	sp, ix
	pop	ix
	ret
BB41_3:
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, 0
	push	de
	pop	bc
	ld	e, (ix + 18)
	ld	(ix - 10), de
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	push	bc
	pop	de
	ld	e, (ix + 12)
	add	iy, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 6), iy
	ld	iy, (ix + 6)
	ld	d, (ix + 15)
	ld	a, (iy)
	or	a, a
	sbc	hl, hl
	ld	(ix - 7), a
	ld	l, a
	ld	bc, (ix - 10)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, 240
	or	a, a
	sbc	hl, bc
	ld	c, 0
	ld	(ix - 13), hl
	ld	e, c
BB41_4:
	ld	l, (iy + 1)
	ld	a, e
	cp	a, l
	jr	nc, BB41_2
	ld	a, c
	ld	hl, (ix - 3)
BB41_6:
	cp	a, d
	jr	z, BB41_17
	ld	(ix - 14), a
	ld	iyl, c
	ld	c, (ix - 7)
BB41_8:
	ld	a, iyl
	cp	a, c
	ld	(ix - 3), hl
	jr	nc, BB41_16
	ld	d, c
	ld	b, (hl)
	ld	a, (gfy_Transparent_Color)
	ld	c, a
	ld	a, b
	cp	a, c
	jr	nz, BB41_11
	ld	bc, (ix - 10)
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	c, d
	jr	BB41_15
BB41_11:
	ld	c, (ix + 18)
BB41_12:
	ld	a, c
	or	a, a
	jr	z, BB41_14
	ld	hl, (ix - 6)
	ld	(hl), b
	inc	hl
	ld	(ix - 6), hl
	dec	c
	jr	BB41_12
BB41_14:
	ld	hl, (ix + 6)
	ld	c, (hl)
BB41_15:
	ld	hl, (ix - 3)
	inc	hl
	inc	iyl
	ld	d, (ix + 15)
	jr	BB41_8
BB41_16:
	or	a, a
	sbc	hl, hl
	ld	(ix - 7), c
	ld	l, c
	ld	iy, (ix - 6)
	ld	bc, (ix - 13)
	add	iy, bc
	ld	(ix - 6), iy
	call	__ineg
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	c, 0
	ld	a, (ix - 14)
	inc	a
	jr	BB41_6
BB41_17:
	ld	bc, 0
	ld	c, (ix - 7)
	add	hl, bc
	ld	(ix - 3), hl
	ld	c, b
	inc	e
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	jp	BB41_4
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Polygon
gfy_Polygon:
	ld	hl, -12
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, 2
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB42_2
BB42_1:
	ld	sp, ix
	pop	ix
	ret
BB42_2:
	ld	iy, -2
	ld	c, 1
	ex	de, hl
	call	__ishl
	push	hl
	pop	de
	lea	bc, iy
	add	hl, bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	add	iy, bc
	ld	hl, (iy)
	ld	(ix - 3), hl
	ld	(ix - 6), de
	dec	de
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	add	iy, de
	ld	hl, (iy)
	push	bc
	pop	iy
	ld	de, (iy)
	ld	bc, (iy + 3)
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	gfy_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	lea	iy, iy + 9
	ld	hl, 2
	ld	(ix - 3), hl
BB42_3:
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	or	a, a
	sbc	hl, de
	jr	nc, BB42_1
	ld	hl, (iy - 3)
	ld	(ix - 9), hl
	ld	de, (iy)
	ld	bc, 2
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	bc, (iy + 3)
	lea	hl, iy + 6
	ld	(ix - 12), hl
	ld	iy, (iy + 6)
	push	iy
	push	bc
	push	de
	ld	hl, (ix - 9)
	push	hl
	call	gfy_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 12)
	jr	BB42_3
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Polygon_NoClip
gfy_Polygon_NoClip:
	ld	hl, -12
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, 2
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB43_2
BB43_1:
	ld	sp, ix
	pop	ix
	ret
BB43_2:
	ld	iy, -2
	ld	c, 1
	ex	de, hl
	call	__ishl
	push	hl
	pop	de
	lea	bc, iy
	add	hl, bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	add	iy, bc
	ld	hl, (iy)
	ld	(ix - 3), hl
	ld	(ix - 6), de
	dec	de
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	add	iy, de
	ld	hl, (iy)
	push	bc
	pop	iy
	ld	de, (iy)
	ld	bc, (iy + 3)
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	gfy_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	lea	iy, iy + 9
	ld	hl, 2
	ld	(ix - 3), hl
BB43_3:
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	or	a, a
	sbc	hl, de
	jr	nc, BB43_1
	ld	hl, (iy - 3)
	ld	(ix - 9), hl
	ld	de, (iy)
	ld	bc, 2
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	bc, (iy + 3)
	lea	hl, iy + 6
	ld	(ix - 12), hl
	ld	iy, (iy + 6)
	push	iy
	push	bc
	push	de
	ld	hl, (ix - 9)
	push	hl
	call	gfy_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 12)
	jr	BB43_3
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_RLETSprite
gfy_RLETSprite:
	ld	hl, -16
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, (gfy_ClipXMax)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB44_4
	ld	hl, (ix + 12)
	ld	bc, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB44_4
	ld	iy, (ix + 6)
	ld	l, (iy)
	ld	a, l
	or	a, a
	jr	z, BB44_4
	ld	a, (iy + 1)
	ld	(ix - 1), a
	or	a, a
	jr	nz, BB44_5
BB44_4:
	ld	sp, ix
	pop	ix
	ret
BB44_5:
	ld	(ix - 2), l
	ld	bc, (gfy_ClipXMin)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB44_9
	ld	bc, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB44_9
	ld	iy, 0
	lea	hl, iy
	ld	l, (ix - 2)
	add	hl, de
	push	hl
	pop	bc
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB44_9
	push	af
	ld	a, (ix - 1)
	ld	iyl, a
	pop	af
	ld	bc, (ix + 12)
	add	iy, bc
	lea	bc, iy
	ld	hl, (gfy_ClipYMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB44_33
BB44_9:
	ld	iy, (ix + 6)
	lea	hl, iy + 2
	ld	(ix - 8), hl
	ld	iy, (-1900524)
	ex	de, hl
	ld	bc, 240
	call	__imulu
	ld	bc, (ix + 12)
	add	hl, bc
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 5), iy
	ld	de, 0
	push	de
	pop	bc
	ld	c, (ix - 2)
	ld	hl, 240
	or	a, a
	sbc	hl, bc
	ld	(ix - 11), hl
	ld	iy, 0
BB44_10:
	ld	e, (ix - 1)
	lea	hl, iy
	or	a, a
	sbc	hl, de
	ld	de, (ix + 9)
	jp	nc, BB44_4
	ld	(ix - 14), iy
	add	iy, de
	ld	bc, (gfy_ClipXMin)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB44_23
	ld	bc, (gfy_ClipXMax)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB44_23
	ld	b, 0
	ld	c, (ix - 2)
	ld	de, 0
BB44_14:
	ld	a, b
	cp	a, c
	jp	nc, BB44_27
	ld	iy, (ix - 8)
	ld	a, (iy)
	ld	e, a
	add	a, b
	ld	b, a
	ld	hl, (ix - 5)
	add	hl, de
	cp	a, c
	jp	nc, BB44_30
	ld	c, (iy + 1)
	lea	iy, iy + 2
	ld	(ix - 8), iy
	ld	(ix - 15), c
	ld	(ix - 1), b
BB44_17:
	ld	(ix - 5), hl
	ld	a, c
	or	a, a
	ld	de, 0
	jr	z, BB44_22
	ld	(ix - 16), c
	ld	(ix - 2), b
	push	de
	pop	iy
	ld	e, (ix - 1)
	ld	iyl, e
	ld	bc, (ix + 12)
	add	iy, bc
	ld	bc, (gfy_ClipYMin)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB44_21
	ld	bc, (gfy_ClipYMax)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB44_21
	ld	hl, (ix - 8)
	ld	a, (hl)
	ld	hl, (ix - 5)
	ld	(hl), a
BB44_21:
	ld	hl, (ix - 8)
	inc	hl
	ld	(ix - 8), hl
	inc	e
	ld	(ix - 1), e
	ld	hl, (ix - 5)
	inc	hl
	ld	c, (ix - 16)
	dec	c
	ld	b, (ix - 2)
	jr	BB44_17
BB44_22:
	ld	a, b
	add	a, (ix - 15)
	ld	b, a
	ld	hl, (ix + 6)
	ld	c, (hl)
	jp	BB44_14
BB44_23:
	ld	bc, (gfy_ClipXMax)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	iy, 0
	ld	c, (ix - 2)
	jp	p, BB44_4
BB44_24:
	ld	a, iyl
	cp	a, c
	jr	nc, BB44_29
	ld	hl, (ix - 8)
	ld	a, (hl)
	add	a, iyl
	push	hl
	pop	iy
	inc	hl
	cp	a, c
	jr	nc, BB44_28
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	ld	(ix - 8), iy
	ld	iy, (ix - 8)
	ld	c, (iy + 1)
	push	bc
	pop	iy
	add	hl, bc
	ld	c, (ix - 2)
	inc	hl
	add	iy, de
	ld	(ix - 8), hl
	jr	BB44_24
BB44_27:
	ld	hl, (ix - 5)
	jr	BB44_31
BB44_28:
	ld	(ix - 8), hl
BB44_29:
	ld	hl, (ix - 5)
	ld	de, 0
	ld	bc, 240
	add	hl, bc
	ld	(ix - 5), hl
	jr	BB44_32
BB44_30:
	inc	iy
	ld	(ix - 8), iy
	ld	de, 0
BB44_31:
	ld	(ix - 2), c
	ld	bc, (ix - 11)
	add	hl, bc
	ld	(ix - 5), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 1)
	ld	(ix - 1), a
BB44_32:
	ld	iy, (ix - 14)
	inc	iy
	jp	BB44_10
BB44_33:
	ld	hl, (ix + 12)
	push	hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	gfy_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	jp	BB44_4
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_RLETSprite_NoClip
gfy_RLETSprite_NoClip:
	ld	hl, -13
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 240
	xor	a, a
	lea	de, iy + 2
	ld	(ix - 10), de
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	de, 0
	ld	e, (ix + 12)
	ld	hl, (ix + 9)
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	l, (iy)
	ld	de, 0
	ld	(ix - 6), l
	ld	e, l
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
BB45_1:
	ld	l, (iy + 1)
	ld	(ix - 7), a
	cp	a, l
	ld	hl, 0
	jp	nc, BB45_10
BB45_2:
	ld	a, l
	ld	e, (ix - 6)
	cp	a, e
	jr	nc, BB45_9
	ld	(ix - 13), bc
	ld	de, 0
	ld	iy, (ix - 10)
	ld	e, (iy)
	lea	bc, iy
	add	hl, de
	ld	iy, (ix - 3)
	add	iy, de
	ld	(ix - 3), iy
	push	bc
	pop	iy
	ld	bc, 255
	call	__iand
	ld	a, l
	ld	c, (ix - 6)
	cp	a, c
	jr	nc, BB45_8
	ld	c, (iy + 1)
	lea	iy, iy + 2
	ld	de, 0
	ld	e, c
	ld	(ix - 6), de
BB45_5:
	ld	a, c
	or	a, a
	jr	z, BB45_7
	ld	a, (iy)
	lea	de, iy
	ld	iy, (ix - 3)
	ld	(iy), a
	inc	de
	inc	iy
	ld	(ix - 3), iy
	push	de
	pop	iy
	dec	c
	jr	BB45_5
BB45_7:
	ld	(ix - 10), iy
	ld	de, (ix - 6)
	add	hl, de
	ld	iy, (ix + 6)
	ld	a, (iy)
	ld	(ix - 6), a
	ld	bc, (ix - 13)
	jr	BB45_2
BB45_8:
	inc	iy
	ld	(ix - 10), iy
	ld	bc, (ix - 13)
BB45_9:
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	a, (ix - 7)
	inc	a
	ld	iy, (ix + 6)
	jp	BB45_1
BB45_10:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_CopyRectangle
gfy_CopyRectangle:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	iy, -1900528
	ld	bc, -1900524
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	z, BB46_2
	push	bc
	pop	hl
BB46_2:
	ld	a, (ix + 21)
	ld	bc, 240
	ld	hl, (hl)
	ld	(ix - 9), hl
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB46_4
	ld	iy, -1900524
BB46_4:
	ld	hl, (iy)
	ld	(ix - 12), hl
	ld	de, 0
	ld	e, (ix + 15)
	ld	hl, (ix + 12)
	call	__imulu
	add	hl, de
	push	hl
	pop	bc
	ld	hl, (ix - 9)
	add	hl, bc
	ld	(ix - 3), hl
	ld	e, a
	ld	hl, (ix + 18)
	ld	bc, 240
	call	__imulu
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 12)
	lea	hl, iy
	add	hl, bc
	ld	(ix - 6), hl
	ld	e, (ix + 27)
	ld	hl, 240
	ld	(ix - 15), de
	or	a, a
	sbc	hl, de
	ld	(ix - 18), hl
	ld	hl, (ix - 9)
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	nz, BB46_8
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	hl, (ix + 24)
BB46_6:
	ld	(ix - 9), de
	ld	iy, (ix - 6)
	add	iy, de
	lea	bc, iy
	ld	iy, (ix - 3)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB46_11
	ld	de, (ix - 15)
	push	de
	push	iy
	push	bc
	ld	(ix - 12), hl
	call	_memmove
	ld	hl, (ix - 12)
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 18)
	ld	iy, (ix - 9)
	add	iy, de
	dec	hl
	lea	de, iy
	jr	BB46_6
BB46_8:
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	hl, (ix + 24)
BB46_9:
	ld	(ix - 9), de
	ld	iy, (ix - 6)
	add	iy, de
	lea	bc, iy
	ld	iy, (ix - 3)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB46_11
	ld	de, (ix - 15)
	push	de
	push	iy
	push	bc
	ld	(ix - 12), hl
	call	_memcpy
	ld	hl, (ix - 12)
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 18)
	ld	iy, (ix - 9)
	add	iy, de
	dec	hl
	lea	de, iy
	jr	BB46_9
BB46_11:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.rodata,"a",@progbits
;	private	_switch.table.gfy_Tilemap_NoClip
_switch.table.gfy_Tilemap_NoClip:
	dl	gfy_Sprite_NoClip_Size2
	dl	gfy_Sprite_NoClip_Size4
	dl	gfy_Sprite_NoClip_Size8
	dl	gfy_Sprite_NoClip_Size16
	dl	gfy_Sprite_NoClip_Size32
	dl	gfy_Sprite_NoClip_Size64
	dl	gfy_Sprite_NoClip_Size128

;	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 9257fd038e0730d7b13ae4ee677745670f077817)"
;	extern	gfy_internal_Begin
;	extern	__Unwind_SjLj_Register
;	extern	__bremu
;	extern	gfy_FontHeight
;	extern	_memcpy
;	extern	gfy_internal_End
;	extern	__idivs
;	extern	__idivu
;	extern	__ixor
;	extern	__sremu
;	extern	gfy_VertLine
;	extern	__ineg
;	extern	gfy_TextXPos
;	extern	__indcallhl
;	extern	_memmove
;	extern	gfy_Color
;	extern	lcd_Init
;	extern	gfy_PrintChar_Clip
;	extern	gfy_ClipXMax
;	extern	gfy_TextYPos
;	extern	gfy_Text_TP_Color
;	extern	__imulu
;	extern	gfy_ClipYMax
;	extern	gfy_TextWidthScale
;	extern	gfy_Transparent_Color
;	extern	gfy_GetCharWidth
;	extern	lcd_SendCommand1
;	extern	gfy_TextData
;	extern	gfy_ClipXMin
;	extern	gfy_TextHeightScale
;	extern	__ishl
;	extern	gfy_Text_FG_Color
;	extern	__setflag
;	extern	__iand
;	extern	gfy_ClipYMin
;	extern	gfy_Text_BG_Color
;	extern	_memset
;	extern	__frameset
;	extern	gfy_SetTextXY
;	extern	lcd_SendCommandWords
;	extern	gfy_VertLine_NoClip
;	extern	__Unwind_SjLj_Unregister
;	extern	lcd_Cleanup
;	extern	__iremu
;	extern	__bshl
