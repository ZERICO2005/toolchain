;	section	.text,"ax",@progbits
;	assume	adl = 1
;	section	.text,"ax",@progbits
;	public	gfy_Begin
gfy_Begin:
	call	gfy_internal_Begin
	ld.sis	hl, 2343
	ld	iy, -1900520
	ld	(iy), l
	ld	(iy + 1), h
	call	900
	ld	e, 1
	ld	l, 0
	ld	a, l
	ld	(-524264), a
	ld	a, 6
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_1:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_1
BB0_2:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_2
	ld	a, l
	ld	(-524280), a
	ld	h, 4
	ld	a, h
	ld	(-524264), a
	ld	d, 5
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
	ld	c, 7
BB0_4:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_4
BB0_5:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_5
	ld	a, l
	ld	(-524280), a
	ld	(-524264), a
	ld	a, d
	ld	(-524264), a
	ld	a, 2
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_7:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_7
BB0_8:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_8
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_10:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_10
BB0_11:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_11
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_13:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_13
BB0_14:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_14
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_16:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_16
BB0_17:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_17
	ld	a, l
	ld	(-524280), a
	ld	a, c
	ld	(-524264), a
	ld	a, d
	ld	(-524264), a
	ld	a, c
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_19:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_19
BB0_20:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_20
	ld	a, l
	ld	(-524280), a
	ld	(-524264), a
	ld	a, d
	ld	(-524264), a
	ld	a, 3
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_22:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_22
BB0_23:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_23
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_25:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_25
BB0_26:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_26
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_28:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_28
BB0_29:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_29
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	a, e
	ld	(-524264), a
	ld	(-524280), a
BB0_31:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_31
BB0_32:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_32
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, c
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB0_34:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB0_34
BB0_35:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB0_35
	ld	a, l
	ld	(-524280), a
	ld.sis	hl, 2343
	ld	iy, -1900520
	ld	(iy), l
	ld	(iy + 1), h
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_End
gfy_End:
	ld	l, 0
	ld	c, 6
	ld	e, 1
	ld	d, 4
	ld	iyh, 5
	ld	b, 2
	ld	h, 7
	ld	iyl, 3
	ld	a, l
	ld	(-524264), a
	ld	a, c
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_1:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_1
BB1_2:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_2
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, e
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_4:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_4
BB1_5:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_5
	ld	a, l
	ld	(-524280), a
	ld	(-524264), a
	ld	a, iyh
	ld	(-524264), a
	ld	a, b
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_7:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_7
BB1_8:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_8
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_10:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_10
BB1_11:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_11
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_13:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_13
BB1_14:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_14
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	a, e
	ld	(-524264), a
	ld	(-524280), a
BB1_16:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_16
BB1_17:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_17
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, h
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_19:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_19
BB1_20:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_20
	ld	a, l
	ld	(-524280), a
	ld	(-524264), a
	ld	a, iyh
	ld	(-524264), a
	ld	a, iyl
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_22:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_22
BB1_23:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_23
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_25:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_25
BB1_26:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_26
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_28:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_28
BB1_29:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_29
	ld	a, l
	ld	(-524280), a
	ld	a, d
	ld	(-524264), a
	ld	a, l
	ld	(-524264), a
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_31:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_31
BB1_32:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_32
	ld	a, l
	ld	(-524280), a
	ld	a, h
	ld	(-524264), a
	ld	a, iyh
	ld	(-524264), a
	ld	a, h
	ld	(-524264), a
	ld	a, e
	ld	(-524280), a
BB1_34:
	ld	a, (-524275)
	cp	a, 16
	jr	nc, BB1_34
BB1_35:
	ld	a, (-524276)
	bit	2, a
	jr	nz, BB1_35
	ld	a, l
	ld	(-524280), a
	ld.sis	hl, 2349
	ld	e, l
	ld	d, h
	ld	hl, -1900520
	ld	(hl), e
	inc	hl
	ld	(hl), d
	call	gfy_internal_End
	ld.sis	hl, 2349
	ld	iy, -1900520
	ld	(iy), l
	ld	(iy + 1), h
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_BlitColumns
gfy_BlitColumns:
	ld	hl, -6
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_2
	ld	a, 0
	jr	BB2_3
BB2_2:
	ld	a, -1
BB2_3:
	ld	hl, -2883584
	ld	iy, -2806784
	bit	0, a
	jr	nz, BB2_5
	lea	hl, iy
BB2_5:
	ld	(ix - 3), hl
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	ld	(ix - 6), de
	ld	bc, 240
	bit	0, a
	jr	nz, BB2_7
	ld	iy, -2883584
BB2_7:
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	add	iy, de
	ld	hl, (ix - 6)
	call	__imulu
	ld	(ix + 6), iy
	ld	de, (ix - 3)
	ld	(ix + 9), de
	ld	(ix + 12), hl
	ld	sp, ix
	pop	ix
	jp	_memcpy
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_BlitRectangle
gfy_BlitRectangle:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_2
	ld	a, 0
	jr	BB3_3
BB3_2:
	ld	a, -1
BB3_3:
	ld	de, -2883584
	ld	iy, -2806784
	bit	0, a
	ld	(ix - 3), de
	jr	nz, BB3_5
	ld	(ix - 3), iy
BB3_5:
	ld	hl, (ix + 9)
	ld	bc, 240
	bit	0, a
	jr	nz, BB3_7
	push	de
	pop	iy
BB3_7:
	ld	de, 0
	ld	e, (ix + 12)
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	ld	hl, (ix + 15)
BB3_8:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_10
	ld	de, (ix + 18)
	push	de
	ld	(ix - 3), bc
	push	bc
	push	iy
	ld	(ix - 6), iy
	ld	(ix - 9), hl
	call	_memcpy
	ld	iy, (ix - 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	add	iy, de
	ld	hl, (ix - 9)
	dec	hl
	jr	BB3_8
BB3_10:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintChar
gfy_PrintChar:
	ld	hl, -22
	call	__frameset
	ld	a, -128
	ld	(ix - 10), a
	ld	l, (ix + 6)
	push	hl
	call	gfy_GetCharWidth
	pop	de
	ld	e, l
	ld	(ix - 6), hl
	ld	bc, 255
	call	__iand
	push	hl
	pop	iy
	ld	a, (gfy_TextWidthScale)
	ld	d, a
	ld	(ix - 9), de
	ld	a, (gfy_TextHeightScale)
	ld	(ix - 14), a
	ld	b, 3
	call	__bshl
	ld	(ix - 3), a
	ld	a, (gfy_PrintChar_Clip)
	ld	hl, (gfy_TextXPos)
	ld	(ix - 13), hl
	cp	a, 2
	jp	z, BB4_26
	ld	de, (gfy_ClipXMin)
	ld	hl, (ix - 13)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB4_26
	ld	hl, (gfy_TextYPos)
	ld	a, (gfy_ClipYMin)
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	ld	(ix - 17), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB4_26
	ld	hl, (ix - 9)
	mlt	hl
	push	bc
	pop	de
	ld	e, l
	ld	hl, (ix - 13)
	add	hl, de
	ex	de, hl
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB4_26
	ld	c, (ix - 3)
	ld	hl, (ix - 17)
	add	hl, bc
	ex	de, hl
	ld	a, (gfy_ClipYMax)
	ld	c, a
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB4_26
	ld	hl, (gfy_TextData)
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 6)
	ld	c, 3
	call	__ishl
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	hl, (-1900524)
	ld	(ix - 20), hl
	ld	hl, (ix - 13)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 17)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 20)
	add	hl, de
	ld	(ix - 20), hl
	ld	bc, 0
	lea	hl, iy
	ld	iy, (ix - 9)
	ld	c, iyh
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 13)
	add	hl, de
	ld	(gfy_TextXPos), hl
	ld	hl, (-1900524)
	ld	(ix - 13), hl
	ld	hl, (-1900524)
	ld	de, 76800
	add	hl, de
	ld	(ix - 17), hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld	iyh, b
	ld	b, iyh
BB4_6:
	ld	de, (ix - 6)
	ld	a, iyh
	cp	a, e
	jp	nc, BB4_43
	ld	iyl, b
	ld	e, (ix - 14)
BB4_8:
	ld	a, iyl
	cp	a, h
	jp	nc, BB4_25
	ld	hl, (ix - 20)
	ld	(ix - 9), hl
	ld	d, b
BB4_10:
	ld	a, (gfy_FontHeight)
	ld	l, a
	ld	a, d
	cp	a, l
	jp	nc, BB4_24
	ld	hl, (ix - 3)
	ld	a, (hl)
	and	a, (ix - 10)
	or	a, a
	ld	hl, gfy_Text_BG_Color
	jr	z, BB4_13
	ld	hl, gfy_Text_FG_Color
BB4_13:
	ld	c, (hl)
	ld	a, (gfy_Text_TP_Color)
	ld	l, a
	ld	a, c
	cp	a, l
	jr	nz, BB4_15
	ld	a, b
	ld	bc, 0
	ld	c, e
	ld	hl, (ix - 9)
	add	hl, bc
	ld	(ix - 9), hl
	ld	b, a
	jr	BB4_23
BB4_15:
	push	af
	ld	a, iyl
	ld	(ix - 21), a
	pop	af
	push	af
	ld	a, iyh
	ld	(ix - 14), a
	pop	af
	ld	l, b
	ld	iy, (ix - 9)
BB4_16:
	ld	a, l
	cp	a, e
	jr	nc, BB4_22
	ld	(ix - 22), l
	ld	(ix - 9), c
	ld	a, b
	lea	hl, iy
	ld	bc, (ix - 13)
	or	a, a
	sbc	hl, bc
	jr	c, BB4_20
	lea	hl, iy
	ld	bc, (ix - 17)
	or	a, a
	sbc	hl, bc
	ld	b, a
	ld	c, (ix - 9)
	ld	l, (ix - 22)
	jr	nc, BB4_21
	ld	(iy), c
	ld	a, (gfy_TextHeightScale)
	ld	e, a
	jr	BB4_21
BB4_20:
	ld	b, a
	ld	c, (ix - 9)
	ld	l, (ix - 22)
BB4_21:
	inc	iy
	inc	l
	jr	BB4_16
BB4_22:
	ld	(ix - 9), iy
	push	af
	ld	a, (ix - 14)
	ld	iyh, a
	pop	af
	push	af
	ld	a, (ix - 21)
	ld	iyl, a
	pop	af
BB4_23:
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	inc	d
	jp	BB4_10
BB4_24:
	ld	c, e
	ld	de, 240
	ld	hl, (ix - 20)
	add	hl, de
	ld	(ix - 20), hl
	ld	a, (gfy_FontHeight)
	or	a, a
	sbc	hl, hl
	ld	l, a
	call	__ineg
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	e, c
	inc	iyl
	ld	a, (gfy_TextWidthScale)
	ld	h, a
	jp	BB4_8
BB4_25:
	ld	(ix - 14), e
	ld	a, (ix - 10)
	srl	a
	ld	(ix - 10), a
	inc	iyh
	jp	BB4_6
BB4_26:
	ld	(ix - 17), iy
	ld	iy, (gfy_TextData)
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 6)
	ld	c, 3
	call	__ishl
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 6), iy
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	de, (gfy_TextYPos)
	ld	iy, (ix - 13)
	lea	hl, iy
	ld	bc, 240
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	bc, 0
	ld	de, (ix - 9)
	ld	c, d
	ld	hl, (ix - 17)
	call	__imulu
	push	hl
	pop	bc
	ld	l, e
	ld	h, d
	add	iy, bc
	ld	(gfy_TextXPos), iy
	ld	c, 0
	ld	a, c
BB4_27:
	cp	a, l
	jp	z, BB4_43
	ld	(ix - 17), a
	ld	e, c
	ld	iy, (ix - 6)
BB4_29:
	ld	a, e
	cp	a, h
	jp	nc, BB4_42
	ld	(ix - 20), e
	ld	(ix - 9), hl
	ld	hl, (ix - 3)
	ld	(ix - 13), hl
	ld	b, c
BB4_31:
	ld	a, (gfy_FontHeight)
	ld	h, a
	ld	a, b
	cp	a, h
	jr	nc, BB4_41
	ld	(ix - 6), iy
	ld	a, (iy)
	and	a, (ix - 10)
	or	a, a
	ld	iy, gfy_Text_BG_Color
	jr	z, BB4_34
	ld	iy, gfy_Text_FG_Color
BB4_34:
	ld	l, (iy)
	ld	a, (gfy_Text_TP_Color)
	ld	d, a
	ld	a, l
	cp	a, d
	jr	nz, BB4_36
	ld	de, 0
	ld	e, (ix - 14)
	ld	hl, (ix - 13)
	add	hl, de
	ld	(ix - 13), hl
	ld	c, d
	ld	iy, (ix - 6)
	jr	BB4_40
BB4_36:
	ld	(ix - 21), l
	ld	c, 0
	ld	d, c
	ld	e, (ix - 14)
	ld	iy, (ix - 6)
BB4_37:
	ld	a, d
	cp	a, e
	jr	nc, BB4_39
	ld	hl, (ix - 13)
	ld	a, (ix - 21)
	ld	(hl), a
	inc	hl
	ld	(ix - 13), hl
	inc	d
	ld	a, (gfy_TextHeightScale)
	ld	e, a
	jr	BB4_37
BB4_39:
	ld	(ix - 14), e
BB4_40:
	inc	iy
	inc	b
	jr	BB4_31
BB4_41:
	ld	de, 240
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	a, (gfy_FontHeight)
	or	a, a
	sbc	hl, hl
	ld	l, a
	call	__ineg
	push	hl
	pop	de
	add	iy, de
	ld	e, (ix - 20)
	inc	e
	ld	a, (gfy_TextWidthScale)
	ld	hl, (ix - 9)
	ld	h, a
	jp	BB4_29
BB4_42:
	ld	(ix - 6), iy
	ld	a, (ix - 10)
	srl	a
	ld	(ix - 10), a
	ld	a, (ix - 17)
	inc	a
	jp	BB4_27
BB4_43:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintInt
gfy_PrintInt:
	ld	hl, -4
	call	__frameset
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	de, 0
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB5_2
	ld	hl, 45
	push	hl
	ld	(ix - 1), a
	ld	(ix - 4), bc
	call	gfy_PrintChar
	ld	a, (ix - 1)
	pop	hl
	ld	hl, (ix - 4)
	call	__ineg
	push	hl
	pop	bc
BB5_2:
	ld	(ix + 6), bc
	ld	(ix + 9), a
	ld	sp, ix
	pop	ix
	jp	gfy_PrintUInt
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintUInt
gfy_PrintUInt:
	ld	hl, -2
	call	__frameset
	ld	d, (ix + 9)
	ld	c, 0
	ld	a, d
	or	a, a
	jp	z, BB6_21
	ld	iy, (ix + 6)
	ld	e, 8
	lea	hl, iy
BB6_2:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB6_4
	ld	a, c
	ld	bc, 10
	call	__idivs
	ld	c, a
	inc	c
	jr	BB6_2
BB6_4:
	ld	a, d
	cp	a, 8
	jr	c, BB6_6
	ld	d, e
BB6_6:
	ld	a, c
	cp	a, d
	jr	c, BB6_8
	ld	d, c
BB6_8:
	ld	hl, 48
BB6_9:
	ld	a, c
	cp	a, d
	jr	z, BB6_11
	push	hl
	ld	(ix - 1), c
	ld	(ix - 2), d
	call	gfy_PrintChar
	ld	d, (ix - 2)
	ld	c, (ix - 1)
	ld	iy, (ix + 6)
	pop	hl
	ld	hl, 48
	dec	d
	jr	BB6_9
BB6_11:
	dec	c
	ld	de, 0
	ld	a, c
	cp	a, 8
	jp	nc, BB6_21
	ld	e, c
	ld	hl, JTI6_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB6_13:
	ld	hl, 49
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_14:
	lea	hl, iy
	ld	bc, 1000000
	call	__idivu
	ld	a, l
	ld	c, 10
	call	__bremu
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_15:
	lea	hl, iy
	ld	bc, 100000
	call	__idivu
	ld	a, l
	ld	c, 10
	call	__bremu
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_16:
	lea	hl, iy
	ld	bc, 10000
	call	__idivu
	ld.sis	bc, 10
	call	__sremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_17:
	lea	hl, iy
	ld	bc, 1000
	call	__idivu
	ld.sis	bc, 10
	call	__sremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_18:
	lea	hl, iy
	ld	bc, 100
	call	__idivu
	ld	bc, 10
	call	__iremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_19:
	lea	hl, iy
	ld	bc, 10
	call	__idivu
	call	__iremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	ld	iy, (ix + 6)
	pop	hl
BB6_20:
	lea	hl, iy
	ld	bc, 10
	call	__iremu
	ld	a, l
	or	a, 48
	ld	l, a
	push	hl
	call	gfy_PrintChar
	pop	hl
BB6_21:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits
;	section	.rodata,"a",@progbits
;	private	JTI6_0
JTI6_0:
	dl	BB6_20
	dl	BB6_19
	dl	BB6_18
	dl	BB6_17
	dl	BB6_16
	dl	BB6_15
	dl	BB6_14
	dl	BB6_13

;	section	.text,"ax",@progbits
;	public	gfy_PrintString
gfy_PrintString:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
BB7_1:
	ld	l, (iy)
	ld	a, l
	or	a, a
	jp	z, BB7_3
	push	hl
	ld	(ix - 3), iy
	call	gfy_PrintChar
	ld	iy, (ix - 3)
	pop	hl
	inc	iy
	jp	BB7_1
BB7_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_PrintStringXY
gfy_PrintStringXY:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	push	de
	push	hl
	call	gfy_SetTextXY
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
BB8_1:
	ld	l, (iy)
	ld	a, l
	or	a, a
	jp	z, BB8_3
	push	hl
	ld	(ix - 3), iy
	call	gfy_PrintChar
	ld	iy, (ix - 3)
	pop	hl
	inc	iy
	jp	BB8_1
BB8_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Line
gfy_Line:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 9)
	ld	hl, (ix + 15)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 3), hl
	ld	hl, (ix + 12)
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	nc, BB9_3
	ld	bc, (ix + 9)
	ld	iy, (ix + 12)
	lea	hl, iy
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ex	de, hl
	lea	de, iy
	jp	p, BB9_5
	push	bc
	push	hl
	ld	hl, (ix + 15)
	push	hl
	push	de
	jr	BB9_6
BB9_3:
	ld	de, (ix + 6)
	ld	iy, (ix + 15)
	lea	hl, iy
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB9_7
	ld	bc, (ix + 9)
	push	bc
	push	de
	push	iy
	ld	hl, (ix + 12)
	push	hl
	jr	BB9_8
BB9_5:
	push	hl
	pop	iy
	ld	hl, (ix + 15)
	push	hl
	push	de
	push	bc
	push	iy
BB9_6:
	call	gfy_internal_Line0
	jr	BB9_9
BB9_7:
	push	iy
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	push	de
BB9_8:
	call	gfy_internal_Line1
BB9_9:
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line0
gfy_internal_Line0:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	ld	iy, (ix + 15)
	ld	de, -1
	ld	(ix - 15), de
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, bc
	ld	(ix - 12), hl
	lea	hl, iy
	ld	de, (ix + 9)
	ld	(ix - 9), de
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_2
	ld	hl, 1
	ld	(ix - 15), hl
BB10_2:
	push	bc
	pop	hl
	push	bc
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 21), hl
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 18), hl
	ld	de, (ix + 6)
	push	de
	pop	hl
	ld	bc, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_4
	ld	(ix - 6), de
BB10_4:
	push	de
	pop	hl
	ld	bc, 240
	call	__imulu
	ld	(ix - 12), hl
BB10_5:
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	jp	z, BB10_18
	ex	de, hl
	ld	de, (gfy_ClipXMin)
	push	hl
	pop	bc
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_11
	ld	de, (gfy_ClipXMax)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB10_11
	ld	a, (gfy_ClipYMin)
	ld	de, 0
	push	de
	pop	iy
	ld	e, a
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_11
	ld	a, (gfy_ClipYMax)
	lea	de, iy
	ld	e, a
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB10_11
	ld	a, (gfy_Color)
	ld	hl, (-1900524)
	ld	de, (ix - 9)
	add	hl, de
	ld	de, (ix - 12)
	add	hl, de
	ld	(hl), a
BB10_11:
	ld	hl, (ix - 3)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, -1
	jp	p, BB10_13
	ld	a, 0
BB10_13:
	bit	0, a
	ld	hl, (ix - 18)
	push	bc
	pop	de
	jr	nz, BB10_15
	ld	hl, (ix - 21)
BB10_15:
	bit	0, a
	ld	iy, (ix - 15)
	jr	nz, BB10_17
	ld	iy, 0
BB10_17:
	ld	bc, (ix - 9)
	add	iy, bc
	ld	bc, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	inc	de
	ld	bc, 240
	ld	hl, (ix - 12)
	add	hl, bc
	ld	(ix - 12), hl
	ld	(ix - 9), iy
	jp	BB10_5
BB10_18:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line1
gfy_internal_Line1:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	ld	iy, (ix + 15)
	ld	de, -1
	ld	(ix - 12), de
	ld	(ix - 3), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	(ix - 9), iy
	lea	hl, iy
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	iy, 0
	push	bc
	pop	de
	push	bc
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB11_2
	ld	hl, 1
	ld	(ix - 12), hl
BB11_2:
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 18), hl
	ld	de, (ix - 15)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 15), hl
	ld	de, (ix + 9)
	push	de
	pop	hl
	ld	bc, (ix + 15)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB11_16
	ld	(ix - 9), de
	jp	BB11_16
BB11_4:
	push	de
	pop	iy
	ld	de, (gfy_ClipXMin)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB11_9
	ld	de, (gfy_ClipXMax)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB11_9
	ld	a, (gfy_ClipYMin)
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB11_9
	ld	a, (gfy_ClipYMax)
	ld	c, a
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB11_9
	ld	a, (gfy_Color)
	ld	hl, (-1900524)
	ld	(ix - 21), hl
	ld	hl, (ix - 3)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 21)
	add	hl, de
	lea	de, iy
	add	hl, de
	ld	(hl), a
BB11_9:
	ld	hl, (ix - 6)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, -1
	jp	p, BB11_11
	ld	a, 0
BB11_11:
	bit	0, a
	ld	hl, (ix - 15)
	lea	de, iy
	jr	nz, BB11_13
	ld	hl, (ix - 18)
BB11_13:
	bit	0, a
	ld	iy, (ix - 12)
	jr	nz, BB11_15
	ld	iy, 0
BB11_15:
	ld	bc, (ix - 3)
	add	iy, bc
	ld	bc, (ix - 6)
	add	hl, bc
	inc	de
	ld	(ix - 6), hl
	ld	(ix - 3), iy
BB11_16:
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	jp	nz, BB11_4
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_FillCircle
gfy_FillCircle:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 12)
	ld	bc, -2
	lea	hl, iy
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	iy
	ld	de, 2
	add	iy, de
	ld	de, 0
	ld	(ix - 3), de
BB12_1:
	ld	(ix - 9), iy
	ld	hl, (ix + 6)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	bc
	pop	iy
	push	bc
	pop	hl
	ld	bc, (ix + 9)
	add	iy, bc
	ld	(ix - 12), iy
	ld	(ix - 6), hl
	ld	bc, -2
	call	__imulu
	inc	hl
	ld	(ix - 15), hl
	push	hl
	ld	hl, (ix - 12)
	push	hl
	push	de
	call	gfy_VertLine
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix + 6)
	add	hl, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 12)
	push	de
	push	hl
	call	gfy_VertLine
	ld	e, -1
	ld	b, e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB12_3
	ld	a, 0
BB12_3:
	ld	iy, (ix - 3)
	inc	iy
	lea	hl, iy
	ld	c, 1
	call	__ishl
	bit	0, a
	jr	nz, BB12_5
	ld	(ix - 3), iy
BB12_5:
	bit	0, a
	ld	iy, 0
	jr	nz, BB12_7
	inc	hl
	push	hl
	pop	iy
BB12_7:
	ld	de, (ix - 9)
	add	iy, de
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB12_9
	ld	a, 0
BB12_9:
	lea	de, iy
	ld	hl, (ix - 3)
	ld	(ix - 9), de
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	l, b
	jp	m, BB12_11
	ld	l, 0
BB12_11:
	or	a, l
	ld	de, (ix - 6)
	inc	de
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	iy
	bit	0, a
	jr	nz, BB12_13
	ld	de, (ix - 6)
BB12_13:
	bit	0, a
	jr	nz, BB12_15
	ld	iy, 0
	jr	BB12_16
BB12_15:
	inc	iy
BB12_16:
	ld	bc, (ix - 9)
	add	iy, bc
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	de
	pop	bc
	jp	m, BB12_1
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Line_NoClip
gfy_Line_NoClip:
	ld	hl, -9
	call	__frameset
	ld	a, (ix + 15)
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	e, (ix + 9)
	ld	(ix - 3), hl
	ld	(ix - 9), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 6), hl
	ld	hl, (ix + 12)
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	ld	iy, (ix + 12)
	or	a, a
	sbc	hl, bc
	jr	nc, BB13_3
	lea	hl, iy
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	bc
	pop	hl
	lea	bc, iy
	jr	nc, BB13_5
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	push	bc
	jr	BB13_6
BB13_3:
	ld	hl, (ix + 6)
	ld	c, (ix + 9)
	cp	a, c
	jr	nc, BB13_7
	ld	de, (ix - 9)
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	push	iy
	jr	BB13_8
BB13_5:
	push	hl
	pop	iy
	ld	hl, (ix - 3)
	push	hl
	push	bc
	ld	hl, (ix - 9)
	push	hl
	push	iy
BB13_6:
	call	gfy_internal_Line0_NoClip
	jr	BB13_9
BB13_7:
	ld	bc, (ix - 3)
	push	bc
	push	iy
	ld	de, (ix - 9)
	push	de
	push	hl
BB13_8:
	call	gfy_internal_Line1_NoClip
BB13_9:
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line0_NoClip
gfy_internal_Line0_NoClip:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	ld	de, (ix + 12)
	scf
	sbc	hl, hl
	ld	(ix - 12), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), hl
	ld	hl, (ix + 15)
	ld	(ix - 3), iy
	lea	de, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB14_2
	ld	hl, 1
	ld	(ix - 12), hl
BB14_2:
	push	bc
	pop	hl
	push	bc
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 21), hl
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 15), hl
	ld	bc, (ix + 6)
	push	bc
	pop	hl
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB14_4
	push	bc
	pop	de
BB14_4:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	bc, 240
	call	__imulu
	ld	(ix - 9), hl
BB14_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB14_13
	ld	a, (gfy_Color)
	ld	hl, (-1900524)
	ld	bc, (ix - 3)
	add	hl, bc
	ld	bc, (ix - 9)
	add	hl, bc
	ld	(hl), a
	ld	hl, (ix - 6)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	a, -1
	jp	p, BB14_8
	ld	a, 0
BB14_8:
	bit	0, a
	ld	hl, (ix - 15)
	jr	nz, BB14_10
	ld	hl, (ix - 21)
BB14_10:
	bit	0, a
	ld	iy, (ix - 12)
	jr	nz, BB14_12
	ld	iy, 0
BB14_12:
	ld	bc, (ix - 3)
	add	iy, bc
	ld	bc, (ix - 6)
	add	hl, bc
	dec	de
	ld	(ix - 18), de
	ld	bc, 240
	ex	de, hl
	ld	hl, (ix - 9)
	add	hl, bc
	ld	(ix - 9), hl
	ld	(ix - 6), de
	ld	de, (ix - 18)
	ld	(ix - 3), iy
	jr	BB14_5
BB14_13:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_internal_Line1_NoClip
gfy_internal_Line1_NoClip:
	ld	hl, -18
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 12)
	ld	iy, (ix + 15)
	ld	de, -1
	ld	(ix - 12), de
	ld	(ix - 3), bc
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	(ix - 9), iy
	lea	hl, iy
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	iy, 0
	push	bc
	pop	de
	push	bc
	pop	hl
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB15_2
	ld	hl, 1
	ld	(ix - 12), hl
BB15_2:
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	c, 1
	call	__ishl
	ld	(ix - 18), hl
	ld	de, (ix - 15)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	call	__ishl
	ld	(ix - 15), hl
	ld	de, (ix + 9)
	push	de
	pop	hl
	ld	bc, (ix + 15)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB15_11
	ld	(ix - 9), de
	jr	BB15_11
BB15_4:
	ld	a, (gfy_Color)
	ld	iy, (-1900524)
	ld	hl, (ix - 3)
	ld	bc, 240
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	add	iy, de
	push	bc
	pop	de
	add	iy, de
	ld	(iy), a
	ld	hl, (ix - 6)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	a, -1
	jp	p, BB15_6
	ld	a, 0
BB15_6:
	bit	0, a
	ld	iy, (ix - 15)
	jr	nz, BB15_8
	ld	iy, (ix - 18)
BB15_8:
	bit	0, a
	ld	hl, (ix - 12)
	jr	nz, BB15_10
	or	a, a
	sbc	hl, hl
BB15_10:
	ld	bc, (ix - 3)
	add	hl, bc
	ld	bc, (ix - 6)
	add	iy, bc
	inc	de
	ld	(ix - 6), iy
	ld	(ix - 3), hl
BB15_11:
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	jr	nz, BB15_4
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_FillCircle_NoClip
gfy_FillCircle_NoClip:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 12)
	ld	bc, -2
	lea	hl, iy
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	iy
	ld	de, 2
	add	iy, de
	ld	de, 0
	ld	(ix - 3), de
BB16_1:
	ld	(ix - 9), iy
	ld	hl, (ix + 6)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	a, c
	add	a, (ix + 9)
	ld	l, a
	ld	(ix - 12), hl
	ld	(ix - 6), bc
	push	bc
	pop	hl
	ld	bc, -2
	call	__imulu
	inc	hl
	ld	(ix - 15), hl
	push	hl
	ld	hl, (ix - 12)
	push	hl
	push	de
	call	gfy_VertLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix + 6)
	add	hl, de
	ld	de, (ix - 15)
	push	de
	ld	de, (ix - 12)
	push	de
	push	hl
	call	gfy_VertLine_NoClip
	ld	e, -1
	ld	b, e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB16_3
	ld	a, 0
BB16_3:
	ld	iy, (ix - 3)
	inc	iy
	lea	hl, iy
	ld	c, 1
	call	__ishl
	bit	0, a
	jr	nz, BB16_5
	ld	(ix - 3), iy
BB16_5:
	bit	0, a
	ld	iy, 0
	jr	nz, BB16_7
	inc	hl
	push	hl
	pop	iy
BB16_7:
	ld	de, (ix - 9)
	add	iy, de
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, b
	jp	m, BB16_9
	ld	a, 0
BB16_9:
	lea	de, iy
	ld	hl, (ix - 3)
	ld	(ix - 9), de
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	l, b
	jp	m, BB16_11
	ld	l, 0
BB16_11:
	or	a, l
	ld	de, (ix - 6)
	inc	de
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	iy
	bit	0, a
	jr	nz, BB16_13
	ld	de, (ix - 6)
BB16_13:
	bit	0, a
	jr	nz, BB16_15
	ld	iy, 0
	jr	BB16_16
BB16_15:
	inc	iy
BB16_16:
	ld	bc, (ix - 9)
	add	iy, bc
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	de
	pop	bc
	jp	m, BB16_1
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Rectangle_NoClip
gfy_Rectangle_NoClip:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_3
	ld	e, (ix + 15)
	ld	a, e
	or	a, a
	jr	z, BB17_3
	ld	bc, (ix + 6)
	ld	a, e
	ld	de, 0
	ld	e, a
	ld	(ix - 3), de
	push	hl
	ld	e, (ix + 9)
	push	de
	push	bc
	call	gfy_HorizLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix + 9)
	dec	a
	add	a, (ix + 15)
	ld	l, a
	ld	de, (ix + 12)
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	gfy_HorizLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	l, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	gfy_VertLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	dec	hl
	ld	de, (ix + 12)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	push	hl
	ld	l, (ix + 9)
	push	hl
	push	de
	call	gfy_VertLine_NoClip
	pop	hl
	pop	hl
	pop	hl
BB17_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftDown
gfy_ShiftDown:
	ld	hl, -17
	call	__frameset
	ld	l, (ix + 6)
	ld	a, l
	or	a, a
	jr	z, BB18_2
	ld	de, 0
	push	de
	pop	bc
	ld	c, l
	ld	hl, (-1900524)
	ld	(ix - 6), hl
	ld	a, (gfy_ClipYMin)
	ld	(ix - 10), a
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 9), hl
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	a, (gfy_ClipYMin)
	ld	(ix - 14), a
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 13), hl
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	a, (gfy_ClipYMin)
	ld	e, a
	push	bc
	pop	iy
	add	iy, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	de, 1
	ld	(ix - 17), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB18_3
BB18_2:
	ld	sp, ix
	pop	ix
	ret
BB18_3:
	or	a, a
	sbc	hl, hl
	ld	l, (ix - 14)
	add	hl, bc
	ex	de, hl
	ld	iy, (ix - 3)
	add	iy, de
	ld	hl, (ix - 13)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	de, 0
	ld	e, (ix - 10)
	ld	iy, (ix - 6)
	add	iy, de
	ld	hl, (ix - 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, (gfy_ClipXMin)
	ld	de, (gfy_ClipXMax)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	bc
	pop	hl
	jp	m, BB18_5
	ex	de, hl
BB18_5:
	lea	de, iy
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
BB18_6:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	ld	de, (ix - 3)
	jr	z, BB18_2
	ld	hl, (ix - 17)
	push	hl
	push	bc
	push	de
	ld	(ix - 9), iy
	ld	(ix - 3), de
	ld	(ix - 6), bc
	call	_memmove
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	add	hl, bc
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	iy, (ix - 9)
	dec	iy
	jr	BB18_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftUp
gfy_ShiftUp:
	ld	hl, -19
	call	__frameset
	ld	l, (ix + 6)
	ld	a, l
	or	a, a
	jr	z, BB19_2
	ld	de, 0
	push	de
	pop	bc
	ld	c, l
	ld	hl, (-1900524)
	ld	(ix - 6), hl
	ld	a, (gfy_ClipYMin)
	ld	(ix - 10), a
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 9), hl
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	a, (gfy_ClipYMin)
	ld	(ix - 16), a
	ld	hl, (gfy_ClipXMin)
	ld	(ix - 13), hl
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	a, (gfy_ClipYMin)
	ld	e, a
	push	bc
	pop	iy
	add	iy, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	de, 1
	ld	(ix - 19), hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB19_3
BB19_2:
	ld	sp, ix
	pop	ix
	ret
BB19_3:
	or	a, a
	sbc	hl, hl
	ld	l, (ix - 16)
	ld	(ix - 16), hl
	sbc	hl, bc
	push	hl
	pop	de
	ld	iy, (ix - 3)
	add	iy, de
	ld	hl, (ix - 13)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 3), iy
	ld	de, (ix - 16)
	ld	e, (ix - 10)
	ld	iy, (ix - 6)
	add	iy, de
	ld	hl, (ix - 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, (gfy_ClipXMin)
	ld	de, (gfy_ClipXMax)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	push	bc
	pop	hl
	jp	m, BB19_5
	ex	de, hl
BB19_5:
	lea	de, iy
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
BB19_6:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	ld	de, (ix - 3)
	jr	z, BB19_2
	ld	hl, (ix - 19)
	push	hl
	push	bc
	push	de
	ld	(ix - 9), iy
	ld	(ix - 3), de
	ld	(ix - 6), bc
	call	_memmove
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	push	hl
	pop	bc
	ld	hl, (ix - 6)
	add	hl, bc
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	iy, (ix - 9)
	dec	iy
	jr	BB19_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftLeft
gfy_ShiftLeft:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB20_2
BB20_1:
	ld	sp, ix
	pop	ix
	ret
BB20_2:
	ld	iy, (-1900524)
	ld	a, (gfy_ClipYMin)
	ld	de, 0
	push	de
	pop	bc
	ld	c, a
	add	iy, bc
	ld	hl, (gfy_ClipXMin)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (-1900524)
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	add	iy, bc
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	a, (gfy_ClipYMin)
	ld	e, a
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	de, (gfy_ClipXMax)
	push	bc
	pop	hl
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	add	iy, bc
	ld	bc, (ix - 6)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB20_4
	push	bc
	pop	de
BB20_4:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
BB20_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB20_1
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	push	iy
	ld	(ix - 6), de
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix - 12)
	add	iy, de
	ld	de, (ix - 6)
	dec	de
	jr	BB20_5
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ShiftRight
gfy_ShiftRight:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB21_2
BB21_1:
	ld	sp, ix
	pop	ix
	ret
BB21_2:
	ld	iy, (-1900524)
	ld	a, (gfy_ClipYMin)
	ld	de, 0
	push	de
	pop	bc
	ld	c, a
	add	iy, bc
	ld	hl, (gfy_ClipXMin)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (-1900524)
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	add	iy, bc
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	a, (gfy_ClipYMin)
	ld	e, a
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	de, (gfy_ClipXMax)
	push	bc
	pop	hl
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	add	iy, bc
	ld	bc, (ix - 6)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB21_4
	push	bc
	pop	de
BB21_4:
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
BB21_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB21_1
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	push	iy
	ld	(ix - 6), de
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 240
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix - 12)
	add	iy, de
	ld	de, (ix - 6)
	dec	de
	jr	BB21_5
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Tilemap
gfy_Tilemap:
	ld	hl, -39
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	xor	a, a
	ld	(ix - 22), a
	ld	de, 0
	ld	e, (iy + 7)
	push	de
	pop	bc
	call	__idivu
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 6)
	push	hl
	pop	iy
	ld	hl, (ix + 12)
	lea	bc, iy
	call	__idivu
	ld	(ix - 6), hl
	ld	hl, (ix - 3)
	ld	(ix - 12), de
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	hl, (ix - 6)
	ld	(ix - 15), iy
	lea	bc, iy
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), hl
	push	de
	pop	hl
	push	de
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB22_2
	ld	a, 0
	jr	BB22_3
BB22_2:
	ld	a, -1
BB22_3:
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	de, (ix - 12)
	push	bc
	pop	iy
	add	iy, de
	bit	0, a
	ld	bc, 0
	jr	nz, BB22_5
	lea	bc, iy
BB22_5:
	or	a, a
	sbc	hl, bc
	ld	(ix - 21), hl
	ld	bc, 0
	ld	iy, (ix + 6)
	ld	c, (iy + 14)
	ld	hl, (ix - 9)
	push	hl
	pop	iy
	ld	de, (ix - 15)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB22_7
	lea	de, iy
BB22_7:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 18), hl
	ld	iy, (ix + 6)
	ld	c, (iy + 9)
	bit	0, a
	jr	nz, BB22_12
	ld	hl, (ix + 9)
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	jr	nc, BB22_10
	ld	hl, (ix - 21)
	add	hl, de
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, hl
	jr	BB22_11
BB22_10:
	inc	c
	ld	hl, (ix - 3)
	dec	hl
BB22_11:
	ld	(ix - 3), hl
BB22_12:
	ld	iy, (ix + 6)
	ld	e, (iy + 8)
	ld	hl, (ix - 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB22_17
	ld	a, c
	ld	hl, (ix + 12)
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	jr	nc, BB22_15
	ld	hl, (ix - 18)
	add	hl, bc
	ld	(ix - 18), hl
	or	a, a
	sbc	hl, hl
	jr	BB22_16
BB22_15:
	inc	e
	ld	hl, (ix - 6)
	dec	hl
BB22_16:
	ld	(ix - 6), hl
	ld	c, a
BB22_17:
	ld	a, c
	or	a, a
	jr	z, BB22_19
	ld	a, e
	or	a, a
	jr	nz, BB22_20
BB22_19:
	ld	sp, ix
	pop	ix
	ret
BB22_20:
	ld	(ix - 23), e
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	(ix - 9), c
	ld	l, c
	ld	(ix - 29), hl
	push	de
	pop	bc
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	c, (iy + 13)
	ex	de, hl
	ld	l, (iy + 12)
	call	__imulu
	ld	(ix - 26), hl
	ld	hl, (ix - 6)
	call	__imulu
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	push	bc
	pop	hl
	ld	de, (ix - 29)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 11)
	dec	a
	cp	a, 7
	jr	nc, BB22_22
	ld	iy, _switch.table.gfy_Tilemap_NoClip
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	jr	BB22_23
BB22_22:
	ld	hl, gfy_Sprite_NoClip
BB22_23:
	ld	(ix - 29), hl
	ld	de, (ix - 12)
	ld	bc, (ix - 15)
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	ld	a, (gfy_ClipYMax)
	or	a, a
	sbc	hl, hl
	ld	l, a
	sbc	hl, bc
	push	hl
	pop	de
	ld	c, (ix - 9)
	ld	b, (ix - 23)
BB22_24:
	ld	a, (ix - 22)
	cp	a, b
	jp	z, BB22_19
	ld	hl, (ix - 18)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), de
	jp	nc, BB22_35
	ld	iyl, b
	ld	a, c
	ld	hl, (ix - 26)
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	c, BB22_28
	ld	bc, (ix - 26)
BB22_28:
	ld	(ix - 35), bc
	ld	c, a
	ld	iyh, c
	ld	hl, (ix - 21)
	ld	(ix - 32), hl
	ld	b, iyl
BB22_29:
	ld	a, iyh
	or	a, a
	jp	z, BB22_41
	ld	hl, (ix - 35)
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jp	z, BB22_19
	push	af
	ld	a, iyh
	ld	(ix - 36), a
	pop	af
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 3)
	ld	(ix - 39), hl
	ld	iy, (iy)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 39)
	add	hl, de
	ld	iy, (hl)
	ld	de, (ix - 32)
	push	de
	pop	hl
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	ld	(ix - 32), de
	jr	nc, BB22_33
	ld	hl, (ix - 18)
	push	hl
	push	de
	push	iy
	ld	hl, (ix - 29)
	call	__indcallhl
	jr	BB22_34
BB22_33:
	ld	hl, (ix - 18)
	push	hl
	push	de
	push	iy
	call	gfy_Sprite
BB22_34:
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	hl, (ix - 32)
	add	hl, de
	ld	(ix - 32), hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	push	af
	ld	a, (ix - 36)
	ld	iyh, a
	pop	af
	dec	iyh
	ld	c, (ix - 9)
	ld	b, (ix - 23)
	ld	de, (ix - 12)
	jp	BB22_29
BB22_35:
	ld	hl, (ix - 26)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	(ix - 32), de
	jr	c, BB22_37
	ld	hl, (ix - 26)
	ld	(ix - 32), hl
BB22_37:
	ld	l, c
	ld	de, (ix - 21)
	ld	(ix - 35), de
BB22_38:
	ld	a, l
	or	a, a
	jr	z, BB22_41
	ld	(ix - 36), l
	ld	hl, (ix - 32)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	jp	z, BB22_19
	ld	iy, (ix + 6)
	ld	hl, (iy + 3)
	ld	(ix - 39), hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 39)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 18)
	push	de
	ld	de, (ix - 35)
	push	de
	push	hl
	call	gfy_Sprite
	ld	b, (ix - 23)
	ld	c, (ix - 9)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	hl, (ix - 35)
	add	hl, de
	ld	(ix - 35), hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	l, (ix - 36)
	dec	l
	jr	BB22_38
BB22_41:
	ld	hl, (ix - 6)
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 6)
	ld	hl, (ix - 18)
	add	hl, de
	ld	(ix - 18), hl
	ld	a, (ix - 22)
	inc	a
	ld	(ix - 22), a
	ld	de, (ix - 12)
	jp	BB22_24
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Sprite_NoClip
gfy_Sprite_NoClip:
	ld	hl, -10
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	bc, iy
	ld	hl, (ix + 6)
	ld	e, (hl)
BB23_1:
	ld	a, e
	or	a, a
	jr	z, BB23_3
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
	ld	(ix - 10), hl
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 7), bc
	push	bc
	ld	(ix - 4), e
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 10)
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 240
	ld	hl, (ix - 7)
	add	hl, de
	ld	e, (ix - 4)
	push	hl
	pop	bc
	dec	e
	jr	BB23_1
BB23_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size2
gfy_Sprite_NoClip_Size2:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy
	ld	iy, (ix + 6)
	ld	c, (iy)
BB24_1:
	ld	a, c
	or	a, a
	jr	z, BB24_3
	ld	iy, (ix - 3)
	ld	de, (iy)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	dec	hl
	lea	iy, iy + 2
	ld	(ix - 3), iy
	ld	de, 240
	add	hl, de
	dec	c
	jr	BB24_1
BB24_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size4
gfy_Sprite_NoClip_Size4:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	hl, (ix + 6)
	ld	c, (hl)
BB25_1:
	ld	a, c
	or	a, a
	jr	z, BB25_3
	ld	iy, (ix - 3)
	ld	(ix - 3), iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	(iy), hl
	ld	(iy + 3), a
	lea	hl, iy
	ld	iy, (ix - 3)
	lea	iy, iy + 4
	ld	(ix - 3), iy
	ld	de, 240
	add	hl, de
	ex	de, hl
	dec	c
	jr	BB25_1
BB25_3:
	pop	hl
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size8
gfy_Sprite_NoClip_Size8:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	hl, (ix + 6)
	ld	l, (hl)
BB26_1:
	ld	a, l
	or	a, a
	jr	z, BB26_3
	ld	iy, (ix - 3)
	ld	(ix - 3), iy
	ld	bc, (iy)
	ld	(ix - 9), bc
	ld	bc, (iy + 3)
	ld	(ix - 6), bc
	ld	bc, (iy + 6)
	ld	(ix - 12), bc
	push	de
	pop	bc
	ld	a, l
	push	bc
	pop	hl
	ld	de, (ix - 9)
	ld	(hl), de
	push	bc
	pop	iy
	ld	hl, (ix - 6)
	ld	(iy + 3), hl
	ld	hl, (ix - 12)
	ld	(iy + 6), l
	ld	(iy + 7), h
	ld	iy, (ix - 3)
	lea	iy, iy + 8
	ld	(ix - 3), iy
	ld	de, 240
	push	bc
	pop	hl
	add	hl, de
	ex	de, hl
	ld	l, a
	dec	l
	jr	BB26_1
BB26_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size16
gfy_Sprite_NoClip_Size16:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix + 6)
	ld	l, (hl)
BB27_1:
	ld	a, l
	or	a, a
	jr	z, BB27_3
	lea	de, iy
	ld	(ix - 6), iy
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 16
	ldir
	ld	l, a
	lea	iy, iy + 16
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, 240
	add	iy, de
	dec	l
	jr	BB27_1
BB27_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size32
gfy_Sprite_NoClip_Size32:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix + 6)
	ld	l, (hl)
BB28_1:
	ld	a, l
	or	a, a
	jr	z, BB28_3
	lea	de, iy
	ld	(ix - 6), iy
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 32
	ldir
	ld	l, a
	lea	iy, iy + 32
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, 240
	add	iy, de
	dec	l
	jr	BB28_1
BB28_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size64
gfy_Sprite_NoClip_Size64:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix + 6)
	ld	l, (hl)
BB29_1:
	ld	a, l
	or	a, a
	jr	z, BB29_3
	lea	de, iy
	ld	(ix - 6), iy
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 64
	ldir
	ld	l, a
	lea	iy, iy + 64
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	de, 240
	add	iy, de
	dec	l
	jr	BB29_1
BB29_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	private	gfy_Sprite_NoClip_Size128
gfy_Sprite_NoClip_Size128:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	bc, 240
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix + 6)
	ld	l, (hl)
BB30_1:
	ld	a, l
	or	a, a
	jr	z, BB30_3
	ld	(ix - 6), iy
	lea	de, iy
	ld	iy, (ix - 3)
	ld	a, l
	lea	hl, iy
	ld	bc, 128
	ldir
	ld	l, a
	ld	de, 128
	add	iy, de
	ld	(ix - 3), iy
	ld	de, 240
	ld	iy, (ix - 6)
	add	iy, de
	dec	l
	jr	BB30_1
BB30_3:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Sprite
gfy_Sprite:
	ld	hl, -24
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB31_6
	ld	hl, (ix + 12)
	ld	a, (gfy_ClipYMax)
	ld	de, 0
	push	de
	pop	bc
	ld	c, a
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB31_6
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	c, (hl)
	ld	a, c
	or	a, a
	jr	z, BB31_6
	ld	a, (iy + 1)
	ld	(ix - 3), a
	or	a, a
	jr	z, BB31_6
	push	de
	pop	hl
	ld	l, c
	ld	(ix - 9), c
	ld	bc, (ix + 9)
	add	hl, bc
	ld	bc, (gfy_ClipXMin)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB31_6
	push	de
	pop	hl
	ld	l, (ix - 3)
	ld	(ix - 15), hl
	ld	bc, (ix + 12)
	add	hl, bc
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	ld	(ix - 18), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB31_7
BB31_6:
	ld	sp, ix
	pop	ix
	ret
BB31_7:
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB31_11
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB31_11
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB31_11
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB31_22
BB31_11:
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	iy, 0
	ld	(ix - 12), iy
	jp	p, BB31_13
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
	ld	(ix - 12), hl
BB31_13:
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	hl, iy
	jp	p, BB31_15
	ld	a, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	sub	a, l
	or	a, a
	sbc	hl, hl
	ld	l, a
BB31_15:
	ld	(ix - 21), hl
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	hl, iy
	jp	p, BB31_17
	ld	hl, (gfy_ClipXMax)
	ld	(ix - 24), hl
	push	bc
	pop	hl
	ld	bc, (ix - 24)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
BB31_17:
	push	hl
	pop	bc
	ld	a, (gfy_ClipYMax)
	ld	e, a
	ex	de, hl
	ld	de, (ix - 18)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB31_19
	ld	a, (gfy_ClipYMax)
	ld	l, a
	ld	a, (ix - 3)
	ld	de, (ix + 12)
	add	a, e
	sub	a, l
	ld	iy, 0
	ld	iyl, a
BB31_19:
	ld	a, c
	ld	hl, (ix - 12)
	add	a, l
	ld	(ix - 12), hl
	ld	e, a
	ld	a, (ix - 9)
	sub	a, e
	ld	(ix - 6), a
	ld	a, iyl
	ld	bc, (ix - 21)
	add	a, c
	ld	e, a
	ld	a, (ix - 3)
	sub	a, e
	push	bc
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	bc, (ix - 15)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy + 2
	ld	(ix - 3), hl
	ld	iy, (-1900524)
	ld	de, (ix + 12)
	ld	hl, (ix - 21)
	add	hl, de
	ex	de, hl
	add	iy, de
	ld	de, (ix + 9)
	ld	hl, (ix - 12)
	add	hl, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	ld	c, (ix - 6)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 9), hl
BB31_20:
	ld	a, c
	or	a, a
	jp	z, BB31_6
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	push	iy
	ld	(ix - 6), c
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	c, (ix - 6)
	ld	de, (ix - 15)
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 240
	ld	iy, (ix - 12)
	add	iy, de
	dec	c
	jr	BB31_20
BB31_22:
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	gfy_Sprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	jp	BB31_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_Tilemap_NoClip
gfy_Tilemap_NoClip:
	ld	hl, -25
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, 0
	push	de
	pop	bc
	ld	iy, (ix + 6)
	ld	c, (iy + 7)
	ld	(ix - 6), bc
	call	__idivu
	ld	(ix - 22), hl
	push	de
	pop	hl
	ld	iy, (ix + 6)
	ld	l, (iy + 6)
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	hl, (ix + 12)
	call	__idivu
	ld	(ix - 16), hl
	ld	iy, (ix + 6)
	ld	e, (iy + 13)
	ld	(ix - 10), de
	push	de
	pop	bc
	call	__imulu
	ld	de, (ix - 22)
	add	hl, de
	ld	(ix - 13), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 9)
	or	a, a
	sbc	hl, hl
	ld	(ix - 7), a
	ld	l, a
	ld	(ix - 19), hl
	ld	hl, (iy + 15)
	ld	(ix - 25), hl
	ex	de, hl
	ld	bc, (ix - 6)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 25)
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	ld	hl, (ix - 16)
	ld	h, l
	ld	de, (ix - 3)
	ld	l, e
	mlt	hl
	ld	de, (ix + 12)
	ld	a, e
	sub	a, l
	ld	l, a
	ld	a, (iy + 14)
	sub	a, l
	ld	l, a
	ld	(ix - 3), hl
	ld	a, (iy + 11)
	dec	a
	cp	a, 7
	jr	nc, BB32_2
	ld	iy, _switch.table.gfy_Tilemap_NoClip
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 16), hl
	ld	iy, (ix + 6)
	jr	BB32_3
BB32_2:
	ld	hl, gfy_Sprite_NoClip
	ld	(ix - 16), hl
BB32_3:
	ld	hl, (ix - 10)
	ld	de, (ix - 19)
	or	a, a
	sbc	hl, de
	ld	(ix - 19), hl
	ld	bc, (ix - 13)
	ld	e, 0
	ld	a, e
	ld	d, (ix - 7)
BB32_4:
	ld	l, (iy + 8)
	ld	(ix - 7), a
	cp	a, l
	ld	hl, (ix - 6)
	ld	a, e
	jr	nc, BB32_8
BB32_5:
	ld	(ix - 13), a
	cp	a, d
	jr	nc, BB32_7
	ld	de, (iy + 3)
	ld	(ix - 25), de
	ld	(ix - 10), hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	(ix - 22), bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 25)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 3)
	push	de
	ld	de, (ix - 10)
	push	de
	push	hl
	ld	hl, (ix - 16)
	call	__indcallhl
	ld	bc, (ix - 22)
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 10)
	ld	de, 0
	ld	e, (iy + 7)
	add	hl, de
	ld	e, d
	inc	bc
	ld	a, (ix - 13)
	inc	a
	ld	d, (iy + 9)
	jr	BB32_5
BB32_7:
	ld	hl, (ix - 19)
	add	hl, bc
	ld	a, (iy + 6)
	ld	bc, (ix - 3)
	add	a, c
	ld	c, a
	ld	(ix - 3), bc
	ld	a, (ix - 7)
	inc	a
	push	hl
	pop	bc
	jp	BB32_4
BB32_8:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentTilemap
gfy_TransparentTilemap:
	ld	hl, -34
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, 0
	ld	e, (iy + 7)
	push	de
	pop	bc
	call	__idivu
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 6)
	push	hl
	pop	iy
	ld	hl, (ix + 12)
	lea	bc, iy
	call	__idivu
	ld	(ix - 20), hl
	ld	hl, (ix - 6)
	ld	(ix - 9), de
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	hl, (ix - 20)
	ld	(ix - 3), iy
	lea	bc, iy
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 16), hl
	push	de
	pop	hl
	push	de
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB33_2
	ld	a, 0
	jr	BB33_3
BB33_2:
	ld	a, -1
BB33_3:
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	de, (ix - 9)
	push	bc
	pop	iy
	add	iy, de
	bit	0, a
	ld	bc, 0
	jr	nz, BB33_5
	lea	bc, iy
BB33_5:
	or	a, a
	sbc	hl, bc
	ld	(ix - 23), hl
	ld	bc, 0
	ld	iy, (ix + 6)
	ld	c, (iy + 14)
	ld	hl, (ix - 16)
	push	hl
	pop	iy
	ld	de, (ix - 3)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jr	z, BB33_7
	lea	de, iy
BB33_7:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	iy, (ix + 6)
	ld	l, (iy + 9)
	ld	(ix - 13), l
	bit	0, a
	jr	z, BB33_9
	ld	bc, (ix - 3)
	jr	BB33_13
BB33_9:
	ld	hl, (ix + 9)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jr	nc, BB33_11
	ld	hl, (ix - 23)
	add	hl, de
	ld	(ix - 23), hl
	or	a, a
	sbc	hl, hl
	jr	BB33_12
BB33_11:
	ld	a, (ix - 13)
	inc	a
	ld	(ix - 13), a
	ld	hl, (ix - 6)
	dec	hl
BB33_12:
	ld	(ix - 6), hl
BB33_13:
	ld	iy, (ix + 6)
	ld	a, (iy + 8)
	ld	(ix - 17), a
	ld	hl, (ix - 16)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB33_15
	ld	de, (ix - 20)
	jr	BB33_18
BB33_15:
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	jr	nc, BB33_17
	ld	hl, (ix - 12)
	add	hl, bc
	ld	(ix - 12), hl
	ld	de, 0
	jr	BB33_18
BB33_17:
	ld	a, (ix - 17)
	inc	a
	ld	(ix - 17), a
	ld	de, (ix - 20)
	dec	de
BB33_18:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	iy, (ix + 6)
	ld	c, (iy + 13)
	ld	l, (iy + 12)
	call	__imulu
	ld	(ix - 16), hl
	ex	de, hl
	call	__imulu
	push	hl
	pop	iy
	ld	de, (ix - 6)
	add	iy, de
	ld	de, 0
	ld	e, (ix - 13)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 20), hl
	ld	hl, (gfy_ClipXMax)
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	a, (gfy_ClipYMax)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	de, (ix - 3)
	sbc	hl, de
	push	hl
	pop	de
	ld	(ix - 3), iy
	ld	c, 0
BB33_19:
	ld	a, c
	ld	l, (ix - 17)
	cp	a, l
	jp	z, BB33_38
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), de
	jp	nc, BB33_30
	ld	hl, (ix - 16)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	push	de
	pop	iy
	jr	c, BB33_23
	ld	iy, (ix - 16)
BB33_23:
	ld	b, (ix - 13)
	ld	hl, (ix - 23)
	ld	(ix - 26), hl
	ld	de, (ix - 6)
BB33_24:
	ld	a, b
	or	a, a
	jp	z, BB33_37
	lea	hl, iy
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 6)
	jp	z, BB33_38
	ld	(ix - 31), b
	ld	(ix - 30), iy
	ld	(ix - 27), c
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 3)
	ld	(ix - 34), hl
	ld	iy, (iy)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 34)
	add	hl, de
	ld	iy, (hl)
	ld	de, (ix - 26)
	push	de
	pop	hl
	ld	bc, (ix - 9)
	or	a, a
	sbc	hl, bc
	ld	(ix - 26), de
	jr	nc, BB33_28
	ld	hl, (ix - 12)
	push	hl
	push	de
	push	iy
	call	gfy_TransparentSprite_NoClip
	jr	BB33_29
BB33_28:
	ld	hl, (ix - 12)
	push	hl
	push	de
	push	iy
	call	gfy_TransparentSprite
BB33_29:
	pop	hl
	pop	hl
	pop	hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	hl, (ix - 26)
	add	hl, de
	ld	(ix - 26), hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	b, (ix - 31)
	dec	b
	ld	c, (ix - 27)
	ld	de, (ix - 6)
	ld	iy, (ix - 30)
	jp	BB33_24
BB33_30:
	ld	(ix - 27), c
	ld	hl, (ix - 16)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	(ix - 26), de
	jr	c, BB33_32
	ld	hl, (ix - 16)
	ld	(ix - 26), hl
BB33_32:
	ld	c, (ix - 13)
	ld	hl, (ix - 23)
BB33_33:
	ld	a, c
	or	a, a
	jr	z, BB33_36
	ld	(ix - 30), hl
	ld	hl, (ix - 26)
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	jr	z, BB33_38
	ld	iy, (ix + 6)
	ld	hl, (iy + 3)
	ld	(ix - 34), hl
	ld	(ix - 31), c
	ld	hl, (ix + 6)
	ld	iy, (hl)
	ld	de, (ix - 3)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 34)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 12)
	push	de
	ld	de, (ix - 30)
	push	de
	push	hl
	call	gfy_TransparentSprite
	ld	c, (ix - 31)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 30)
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	add	hl, de
	ld	de, (ix - 3)
	inc	de
	ld	(ix - 3), de
	dec	c
	jr	BB33_33
BB33_36:
	ld	c, (ix - 27)
BB33_37:
	ld	hl, (ix - 20)
	ld	de, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 0
	ld	iy, (ix + 6)
	ld	e, (iy + 6)
	ld	hl, (ix - 12)
	add	hl, de
	ld	(ix - 12), hl
	inc	c
	ld	de, (ix - 6)
	jp	BB33_19
BB33_38:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentSprite_NoClip
gfy_TransparentSprite_NoClip:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	xor	a, a
	lea	de, iy + 2
	ld	(ix - 9), de
	ld	iy, (-1900524)
	ld	de, 0
	ld	e, (ix + 12)
	add	iy, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	lea	bc, iy
	ld	e, (iy + 1)
	ld	hl, 240
	ld	(ix - 6), de
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	iyl, a
	ld	d, iyl
BB34_1:
	push	bc
	pop	hl
	ld	l, (hl)
	ld	a, d
	cp	a, l
	ld	e, iyl
	jr	nc, BB34_7
BB34_2:
	ld	a, e
	ld	hl, (ix - 6)
	cp	a, l
	jr	nc, BB34_6
	ld	a, (gfy_Transparent_Color)
	ld	l, a
	ld	iy, (ix - 9)
	ld	a, (iy)
	cp	a, l
	ld	hl, (ix - 3)
	jr	z, BB34_5
	lea	hl, iy
BB34_5:
	ld	a, (hl)
	ld	hl, (ix - 3)
	ld	(hl), a
	inc	iy
	ld	(ix - 9), iy
	inc	hl
	ld	(ix - 3), hl
	inc	e
	push	bc
	pop	iy
	ld	l, (iy + 1)
	ld	(ix - 6), hl
	ld	h, 0
	ex	de, hl
	ld	iyl, d
	ex	de, hl
	jr	BB34_2
BB34_6:
	ld	hl, (ix - 3)
	ld	a, d
	ld	de, (ix - 12)
	add	hl, de
	ld	d, a
	ld	(ix - 3), hl
	inc	d
	jr	BB34_1
BB34_7:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentSprite
gfy_TransparentSprite:
	ld	hl, -21
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, (gfy_ClipXMax)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB35_6
	ld	hl, (ix + 12)
	ld	a, (gfy_ClipYMax)
	ld	de, 0
	push	de
	pop	bc
	ld	c, a
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB35_6
	ld	iy, (ix + 6)
	ld	c, (iy)
	ld	a, c
	or	a, a
	jr	z, BB35_6
	ld	a, (iy + 1)
	ld	(ix - 3), a
	or	a, a
	jr	z, BB35_6
	push	de
	pop	hl
	ld	l, c
	ld	(ix - 9), c
	ld	bc, (ix + 9)
	add	hl, bc
	ld	bc, (gfy_ClipXMin)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB35_6
	push	de
	pop	iy
	push	af
	ld	a, (ix - 3)
	ld	iyl, a
	pop	af
	lea	hl, iy
	ld	bc, (ix + 12)
	add	hl, bc
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	ld	(ix - 15), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB35_7
BB35_6:
	ld	sp, ix
	pop	ix
	ret
BB35_7:
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB35_11
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB35_11
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB35_11
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB35_27
BB35_11:
	ld	(ix - 21), iy
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	iy, 0
	ld	(ix - 12), iy
	jp	p, BB35_13
	ld	hl, (gfy_ClipXMin)
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
	ld	(ix - 12), hl
BB35_13:
	ld	a, (gfy_ClipYMin)
	push	de
	pop	bc
	ld	c, a
	ld	hl, (ix + 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	hl, iy
	jp	p, BB35_15
	ld	a, (gfy_ClipYMin)
	ld	hl, (ix + 12)
	sub	a, l
	or	a, a
	sbc	hl, hl
	ld	l, a
BB35_15:
	ld	(ix - 18), hl
	ld	hl, (gfy_ClipXMax)
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	hl, iy
	jp	p, BB35_17
	push	bc
	pop	hl
	ld	bc, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
BB35_17:
	ld	(ix - 6), hl
	ld	a, (gfy_ClipYMax)
	push	de
	pop	hl
	ld	l, a
	ld	bc, (ix - 15)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB35_19
	ld	a, (gfy_ClipYMax)
	ld	iyl, a
	ld	a, (ix - 3)
	ld	hl, (ix + 12)
	add	a, l
	sub	a, iyl
	ld	iy, 0
	ld	iyl, a
BB35_19:
	ld	hl, (ix - 6)
	ld	a, l
	ld	hl, (ix - 12)
	add	a, l
	ld	l, a
	ld	a, (ix - 9)
	sub	a, l
	ld	(ix - 6), a
	ld	bc, (ix - 18)
	add	iy, bc
	ld	(ix - 9), iy
	ld	a, (ix - 3)
	sub	a, iyl
	ld	e, a
	ld	iy, (ix + 6)
	add	iy, bc
	ld	hl, (ix - 12)
	ld	bc, (ix - 21)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	lea	hl, iy + 2
	ld	(ix - 21), hl
	ld	iy, (-1900524)
	ld	bc, (ix + 12)
	ld	hl, (ix - 18)
	add	hl, bc
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, (ix + 9)
	ld	hl, (ix - 12)
	add	hl, bc
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (ix - 21)
	ld	hl, 240
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix - 9)
	ld	bc, 255
	call	__iand
	ld	(ix - 15), hl
	xor	a, a
BB35_20:
	ld	(ix - 9), a
	ld	l, (ix - 6)
	cp	a, l
	jp	z, BB35_6
	ld	c, e
BB35_22:
	ld	a, c
	or	a, a
	jr	z, BB35_26
	ld	a, (gfy_Transparent_Color)
	ld	l, a
	ld	a, (iy)
	cp	a, l
	ld	hl, (ix - 3)
	jr	z, BB35_25
	lea	hl, iy
BB35_25:
	ld	a, (hl)
	ld	hl, (ix - 3)
	ld	(hl), a
	inc	iy
	inc	hl
	ld	(ix - 3), hl
	dec	c
	jr	BB35_22
BB35_26:
	ld	bc, (ix - 15)
	add	iy, bc
	ld	hl, (ix - 3)
	ld	bc, (ix - 12)
	add	hl, bc
	ld	(ix - 3), hl
	ld	a, (ix - 9)
	inc	a
	jr	BB35_20
BB35_27:
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	gfy_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	jp	BB35_6
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_TransparentTilemap_NoClip
gfy_TransparentTilemap_NoClip:
	ld	hl, -22
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, 0
	push	bc
	pop	iy
	ld	e, (iy + 7)
	ld	(ix - 22), de
	push	de
	pop	bc
	call	__idivu
	ld	(ix - 6), hl
	ld	de, 0
	push	de
	pop	hl
	ld	l, (iy + 6)
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	hl, (ix + 12)
	call	__idivu
	ld	(ix - 16), hl
	ld	e, (iy + 13)
	push	de
	pop	bc
	call	__imulu
	ld	bc, (ix - 6)
	add	hl, bc
	ld	(ix - 9), hl
	ld	a, (iy + 9)
	ld	(ix - 13), a
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 12), hl
	ld	hl, (iy + 15)
	ld	(ix - 19), hl
	push	bc
	pop	hl
	ld	bc, (ix - 22)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix - 19)
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	ld	hl, (ix - 16)
	ld	h, l
	ld	bc, (ix - 3)
	ld	l, c
	mlt	hl
	ld	bc, (ix + 12)
	ld	a, c
	sub	a, l
	ld	l, a
	ld	a, (iy + 14)
	sub	a, l
	ld	l, a
	ld	(ix - 3), hl
	ex	de, hl
	ld	d, (ix - 13)
	ld	e, 0
	ld	bc, (ix - 12)
	or	a, a
	sbc	hl, bc
	ld	(ix - 16), hl
	ld	bc, (ix - 9)
	ld	a, e
BB36_1:
	ld	l, (iy + 8)
	ld	(ix - 9), a
	cp	a, l
	ld	hl, (ix - 6)
	ld	a, e
	jr	nc, BB36_5
BB36_2:
	ld	(ix - 13), a
	cp	a, d
	jr	nc, BB36_4
	ld	de, (iy + 3)
	ld	(ix - 22), de
	ld	(ix - 12), hl
	ld	hl, (ix + 6)
	ld	iy, (hl)
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	(ix - 19), bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 22)
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix - 3)
	push	de
	ld	de, (ix - 12)
	push	de
	push	hl
	call	gfy_TransparentSprite_NoClip
	ld	bc, (ix - 19)
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 12)
	ld	de, 0
	ld	e, (iy + 7)
	add	hl, de
	ld	e, d
	inc	bc
	ld	a, (ix - 13)
	inc	a
	ld	d, (iy + 9)
	jr	BB36_2
BB36_4:
	ld	hl, (ix - 16)
	add	hl, bc
	ld	a, (iy + 6)
	ld	bc, (ix - 3)
	add	a, c
	ld	c, a
	ld	(ix - 3), bc
	ld	a, (ix - 9)
	inc	a
	push	hl
	pop	bc
	jr	BB36_1
BB36_5:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_GetSprite
gfy_GetSprite:
	ld	hl, -10
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 12)
	ld	bc, 240
	xor	a, a
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	ex	de, hl
	add	iy, de
	ld	hl, (ix + 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
BB37_1:
	ld	hl, (ix + 6)
	ld	l, (hl)
	ld	(ix - 4), a
	cp	a, l
	jr	nc, BB37_3
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
	ld	(ix - 7), hl
	push	hl
	ld	(ix - 10), de
	push	de
	ld	hl, (ix - 3)
	push	hl
	call	_memcpy
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 240
	ld	hl, (ix - 10)
	add	hl, de
	ex	de, hl
	ld	bc, (ix - 7)
	ld	c, (iy + 1)
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	a, (ix - 4)
	inc	a
	jr	BB37_1
BB37_3:
	ld	hl, (ix + 6)
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ScaledSprite_NoClip
gfy_ScaledSprite_NoClip:
	ld	hl, -21
	call	__frameset
	ld	c, (ix + 15)
	or	a, a
	sbc	hl, hl
	ld	a, c
	or	a, a
	jp	z, BB38_12
	ld	b, (ix + 18)
	ld	a, b
	or	a, a
	jp	z, BB38_12
	push	hl
	pop	iy
	ld	l, c
	ld	(ix - 6), hl
	lea	de, iy
	lea	hl, iy
	ld	e, b
	ld	iy, (ix + 6)
	lea	bc, iy + 2
	ld	(ix - 9), bc
	ld	iy, (-1900524)
	push	hl
	pop	bc
	ld	c, (ix + 12)
	ld	(ix - 18), bc
	add	iy, bc
	ld	hl, (ix + 9)
	ld	bc, 240
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 21), bc
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	ld	hl, (ix - 6)
	ld	bc, 240
	call	__imulu
	ld	(ix - 12), hl
	ld	a, (iy + 1)
	ld	(ix - 6), a
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 15), de
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, bc
	ld	b, 0
	ld	(ix - 12), hl
BB38_3:
	ld	d, (iy)
	ld	a, b
	cp	a, d
	jr	nc, BB38_11
	ld	c, 0
BB38_5:
	ld	a, c
	ld	l, (ix - 6)
	cp	a, l
	jr	nc, BB38_10
	ld	iy, (ix - 9)
	ld	d, (iy)
	ld	e, (ix + 18)
BB38_7:
	ld	a, e
	or	a, a
	jr	z, BB38_9
	ld	hl, (ix - 3)
	ld	(hl), d
	inc	hl
	ld	(ix - 3), hl
	dec	e
	jr	BB38_7
BB38_9:
	inc	iy
	ld	(ix - 9), iy
	inc	c
	ld	iy, (ix + 6)
	ld	a, (iy + 1)
	ld	(ix - 6), a
	jr	BB38_5
BB38_10:
	ld	hl, (ix - 3)
	ld	de, (ix - 12)
	add	hl, de
	ld	(ix - 3), hl
	inc	b
	ld	iy, (ix + 6)
	jr	BB38_3
BB38_11:
	ld	a, (ix + 15)
	cp	a, 1
	ld	hl, 0
	jr	nz, BB38_13
BB38_12:
	ld	sp, ix
	pop	ix
	ret
BB38_13:
	ld	iy, (-1900524)
	ld	bc, (ix - 18)
	add	iy, bc
	ld	bc, (ix - 21)
	add	iy, bc
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	ld	l, (ix - 6)
	ld	bc, (ix - 15)
	call	__imulu
	ld	c, 0
	ld	b, (ix + 15)
	ld	(ix - 15), hl
	dec	b
BB38_14:
	ld	a, c
	cp	a, d
	jr	nc, BB38_12
	ld	hl, (ix - 3)
	ld	de, 240
	add	hl, de
	ld	e, b
BB38_16:
	ld	a, e
	or	a, a
	jr	z, BB38_18
	ld	(ix - 6), hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	(ix - 9), b
	ld	(ix - 12), c
	ld	(ix - 18), e
	call	_memcpy
	ld	iy, (ix + 6)
	ld	c, (ix - 12)
	ld	b, (ix - 9)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	ld	de, 240
	add	hl, de
	ld	e, (ix - 18)
	dec	e
	jr	BB38_16
BB38_18:
	inc	c
	ld	d, (iy)
	ld	(ix - 3), hl
	jr	BB38_14
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_ScaledTransparentSprite_NoClip
gfy_ScaledTransparentSprite_NoClip:
	ld	hl, -13
	call	__frameset
	ld	a, (ix + 15)
	or	a, a
	jr	z, BB39_2
	ld	a, (ix + 18)
	or	a, a
	jr	nz, BB39_3
BB39_2:
	ld	sp, ix
	pop	ix
	ret
BB39_3:
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, 0
	push	de
	pop	bc
	ld	e, (ix + 18)
	ld	(ix - 9), de
	lea	de, iy + 2
	ld	(ix - 3), de
	ld	iy, (-1900524)
	push	bc
	pop	de
	ld	e, (ix + 12)
	add	iy, de
	ld	bc, 240
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	(ix - 6), iy
	ld	iy, (ix + 6)
	ld	d, (iy + 1)
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	bc, (ix - 9)
	call	__imulu
	push	hl
	pop	bc
	ld	hl, 240
	or	a, a
	sbc	hl, bc
	ld	c, 0
	ld	(ix - 12), hl
	ld	e, c
BB39_4:
	ld	l, (iy)
	ld	a, e
	cp	a, l
	jr	nc, BB39_2
	ld	a, c
	ld	iy, (ix - 3)
BB39_6:
	ld	l, (ix + 15)
	cp	a, l
	jr	z, BB39_17
	ld	(ix - 13), a
	ld	l, c
BB39_8:
	ld	a, l
	cp	a, d
	jr	nc, BB39_16
	ld	b, (iy)
	ld	a, (gfy_Transparent_Color)
	ld	c, a
	ld	a, b
	cp	a, c
	jr	nz, BB39_11
	ld	bc, (ix - 9)
	ld	a, l
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	l, a
	jr	BB39_15
BB39_11:
	ld	c, (ix + 18)
BB39_12:
	ld	a, c
	or	a, a
	jr	z, BB39_14
	ld	a, l
	ld	hl, (ix - 6)
	ld	(hl), b
	inc	hl
	ld	(ix - 6), hl
	ld	l, a
	dec	c
	jr	BB39_12
BB39_14:
	lea	bc, iy
	ld	iy, (ix + 6)
	ld	d, (iy + 1)
	push	bc
	pop	iy
BB39_15:
	inc	iy
	inc	l
	jr	BB39_8
BB39_16:
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	(ix - 3), iy
	ld	iy, (ix - 6)
	ld	bc, (ix - 12)
	add	iy, bc
	ld	(ix - 6), iy
	ld	iy, (ix - 3)
	call	__ineg
	push	hl
	pop	bc
	add	iy, bc
	ld	c, 0
	ld	a, (ix - 13)
	inc	a
	jr	BB39_6
BB39_17:
	ld	bc, 0
	ld	c, d
	add	iy, bc
	ld	(ix - 3), iy
	ld	c, b
	inc	e
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	jp	BB39_4
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_RLETSprite
gfy_RLETSprite:
	ld	hl, -24
	call	__frameset
	ld	hl, (ix + 9)
	ld	bc, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB40_4
	ld	de, (ix + 12)
	ld	a, (gfy_ClipYMax)
	ld	bc, 0
	ld	c, a
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB40_4
	ld	iy, (ix + 6)
	ld	a, (iy)
	ld	(ix - 3), a
	or	a, a
	jr	z, BB40_4
	ld	a, (iy + 1)
	ld	(ix - 6), a
	or	a, a
	jr	nz, BB40_5
BB40_4:
	ld	sp, ix
	pop	ix
	ret
BB40_5:
	ld	bc, (gfy_ClipXMin)
	ld	hl, (ix + 9)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, 0
	push	hl
	pop	iy
	jp	m, BB40_9
	ld	a, (gfy_ClipYMin)
	lea	bc, iy
	ld	c, a
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB40_9
	lea	hl, iy
	ld	l, (ix - 3)
	ld	bc, (ix + 9)
	add	hl, bc
	push	hl
	pop	bc
	ld	hl, (gfy_ClipXMax)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB40_9
	lea	hl, iy
	ld	l, (ix - 6)
	push	de
	pop	bc
	add	hl, bc
	push	hl
	pop	bc
	ld	a, (gfy_ClipYMax)
	lea	hl, iy
	ld	l, a
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB40_33
BB40_9:
	ld	iy, (ix + 6)
	lea	hl, iy + 2
	ld	(ix - 9), hl
	ld	iy, (-1900524)
	ld	hl, (ix + 9)
	ld	bc, 240
	call	__imulu
	add	hl, de
	push	hl
	pop	bc
	add	iy, bc
	ld	de, 0
	push	de
	pop	bc
	ld	c, (ix - 6)
	ld	hl, 240
	or	a, a
	sbc	hl, bc
	ld	(ix - 15), hl
	or	a, a
	sbc	hl, hl
BB40_10:
	push	de
	pop	bc
	ld	c, (ix - 3)
	push	hl
	pop	de
	or	a, a
	sbc	hl, bc
	jp	nc, BB40_4
	ld	(ix - 12), iy
	ld	(ix - 18), de
	push	de
	pop	iy
	ld	de, (ix + 9)
	add	iy, de
	ld	bc, (gfy_ClipXMin)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB40_23
	ld	bc, (gfy_ClipXMax)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB40_23
	ld	de, 0
	ld	(ix - 3), de
	ld	iy, (ix - 12)
BB40_14:
	ld	de, 0
	push	de
	pop	bc
	ld	c, (ix - 6)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, bc
	jp	nc, BB40_31
	ld	hl, (ix - 9)
	ld	e, (hl)
	ld	hl, (ix - 3)
	add	hl, de
	add	iy, de
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, bc
	jp	nc, BB40_30
	ld	(ix - 12), iy
	ld	iy, (ix - 9)
	ld	c, (iy + 1)
	lea	iy, iy + 2
	ld	(ix - 9), iy
	ld	hl, (ix + 12)
	push	de
	pop	iy
	ld	de, (ix - 3)
	add	hl, de
	lea	de, iy
	add	hl, de
	ld	(ix - 6), hl
	ld	de, 0
BB40_17:
	ld	a, c
	or	a, a
	jr	z, BB40_22
	ld	(ix - 3), c
	ld	iy, (ix - 6)
	add	iy, de
	ld	a, (gfy_ClipYMin)
	ex	de, hl
	ld	de, 0
	push	de
	pop	bc
	ex	de, hl
	ld	c, a
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB40_21
	ld	a, (gfy_ClipYMax)
	ld	bc, 0
	ld	c, a
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	nc, BB40_21
	ld	hl, (ix - 9)
	add	hl, de
	ld	a, (hl)
	ld	hl, (ix - 12)
	add	hl, de
	ld	(hl), a
BB40_21:
	inc	de
	ld	c, (ix - 3)
	dec	c
	jr	BB40_17
BB40_22:
	ld	iy, (ix + 6)
	ld	a, (iy + 1)
	ld	(ix - 6), a
	ld	hl, (ix - 21)
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 12)
	add	iy, de
	ld	hl, (ix - 9)
	add	hl, de
	ld	(ix - 9), hl
	ld	(ix - 3), bc
	jp	BB40_14
BB40_23:
	ld	bc, (gfy_ClipXMax)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, 0
	ld	iy, (ix - 12)
	jp	p, BB40_4
	ld	de, 0
	ld	e, (ix - 6)
	ld	(ix - 21), de
	ld	de, 0
BB40_25:
	ld	(ix - 24), hl
	ld	bc, (ix - 21)
	or	a, a
	sbc	hl, bc
	jr	nc, BB40_29
	ld	bc, 0
	ld	iy, (ix - 9)
	ld	c, (iy)
	ld	hl, (ix - 24)
	add	hl, bc
	ld	(ix - 9), iy
	inc	iy
	ld	(ix - 24), hl
	ld	bc, (ix - 21)
	or	a, a
	sbc	hl, bc
	jr	nc, BB40_28
	ld	bc, 0
	lea	hl, iy
	ld	iy, (ix - 9)
	ld	c, (iy + 1)
	add	hl, bc
	inc	hl
	push	hl
	pop	iy
	ld	hl, (ix - 24)
	add	hl, bc
	ld	(ix - 9), iy
	ld	iy, (ix - 12)
	jr	BB40_25
BB40_28:
	ld	(ix - 9), iy
	ld	iy, (ix - 12)
BB40_29:
	ld	hl, (ix - 18)
	ld	bc, 240
	add	iy, bc
	jr	BB40_32
BB40_30:
	ld	hl, (ix - 9)
	inc	hl
	ld	(ix - 9), hl
BB40_31:
	ld	de, (ix - 15)
	add	iy, de
	ld	hl, (ix + 6)
	ld	a, (hl)
	ld	(ix - 3), a
	ld	de, 0
	ld	hl, (ix - 18)
BB40_32:
	inc	hl
	jp	BB40_10
BB40_33:
	push	de
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	gfy_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	jp	BB40_4
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_RLETSprite_NoClip
gfy_RLETSprite_NoClip:
	ld	hl, -16
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 240
	xor	a, a
	lea	de, iy + 2
	ld	(ix - 10), de
	ld	hl, (-1900524)
	ld	(ix - 3), hl
	ld	de, 0
	ld	e, (ix + 12)
	ld	hl, (ix + 9)
	call	__imulu
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	l, (iy + 1)
	ld	de, 0
	ld	(ix - 7), l
	ld	e, l
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix - 13), hl
BB41_1:
	ld	l, (iy)
	ld	(ix - 4), a
	cp	a, l
	ld	iy, 0
	jp	nc, BB41_10
BB41_2:
	ld	de, 0
	push	de
	pop	bc
	ld	c, (ix - 7)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	nc, BB41_9
	lea	hl, iy
	ld	iy, (ix - 10)
	ld	e, (iy)
	add	hl, de
	ld	(ix - 16), hl
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	hl, (ix - 16)
	push	hl
	pop	de
	or	a, a
	sbc	hl, bc
	jr	nc, BB41_8
	ld	c, (iy + 1)
	lea	iy, iy + 2
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	(ix - 7), hl
BB41_5:
	ld	a, c
	or	a, a
	jr	z, BB41_7
	ld	a, (iy)
	ld	hl, (ix - 3)
	ld	(hl), a
	inc	iy
	inc	hl
	ld	(ix - 3), hl
	dec	c
	jr	BB41_5
BB41_7:
	ld	(ix - 10), iy
	ex	de, hl
	ld	de, (ix - 7)
	add	hl, de
	ld	iy, (ix + 6)
	ld	a, (iy + 1)
	ld	(ix - 7), a
	push	hl
	pop	iy
	jr	BB41_2
BB41_8:
	inc	iy
	ld	(ix - 10), iy
BB41_9:
	ld	hl, (ix - 3)
	ld	de, (ix - 13)
	add	hl, de
	ld	(ix - 3), hl
	ld	a, (ix - 4)
	inc	a
	ld	iy, (ix + 6)
	jp	BB41_1
BB41_10:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gfy_CopyRectangle
gfy_CopyRectangle:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	iy, -1900528
	ld	bc, -1900524
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	jr	z, BB42_2
	push	bc
	pop	hl
BB42_2:
	ld	a, (ix + 21)
	ld	bc, 240
	ld	hl, (hl)
	ld	(ix - 9), hl
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB42_4
	ld	iy, -1900524
BB42_4:
	ld	hl, (iy)
	ld	(ix - 12), hl
	ld	de, 0
	ld	e, (ix + 15)
	ld	hl, (ix + 12)
	call	__imulu
	add	hl, de
	push	hl
	pop	bc
	ld	hl, (ix - 9)
	add	hl, bc
	ld	(ix - 3), hl
	ld	e, a
	ld	hl, (ix + 18)
	ld	bc, 240
	call	__imulu
	add	hl, de
	push	hl
	pop	bc
	ld	iy, (ix - 12)
	lea	hl, iy
	add	hl, bc
	ld	(ix - 6), hl
	ld	e, (ix + 27)
	ld	hl, 240
	ld	(ix - 15), de
	or	a, a
	sbc	hl, de
	ld	(ix - 18), hl
	ld	hl, (ix - 9)
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	nz, BB42_8
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	hl, (ix + 24)
BB42_6:
	ld	(ix - 9), de
	ld	iy, (ix - 6)
	add	iy, de
	lea	bc, iy
	ld	iy, (ix - 3)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB42_11
	ld	de, (ix - 15)
	push	de
	push	iy
	push	bc
	ld	(ix - 12), hl
	call	_memmove
	ld	hl, (ix - 12)
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 18)
	ld	iy, (ix - 9)
	add	iy, de
	dec	hl
	lea	de, iy
	jr	BB42_6
BB42_8:
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	hl, (ix + 24)
BB42_9:
	ld	(ix - 9), de
	ld	iy, (ix - 6)
	add	iy, de
	lea	bc, iy
	ld	iy, (ix - 3)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB42_11
	ld	de, (ix - 15)
	push	de
	push	iy
	push	bc
	ld	(ix - 12), hl
	call	_memcpy
	ld	hl, (ix - 12)
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 18)
	ld	iy, (ix - 9)
	add	iy, de
	dec	hl
	lea	de, iy
	jr	BB42_9
BB42_11:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.rodata,"a",@progbits
;	private	_switch.table.gfy_Tilemap_NoClip
_switch.table.gfy_Tilemap_NoClip:
	dl	gfy_Sprite_NoClip_Size2
	dl	gfy_Sprite_NoClip_Size4
	dl	gfy_Sprite_NoClip_Size8
	dl	gfy_Sprite_NoClip_Size16
	dl	gfy_Sprite_NoClip_Size32
	dl	gfy_Sprite_NoClip_Size64
	dl	gfy_Sprite_NoClip_Size128

;	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 51b05c1c99dbd61fce7daf56414f212f15b2171a)"
;	extern	gfy_internal_Begin
;	extern	__Unwind_SjLj_Register
;	extern	__bremu
;	extern	gfy_FontHeight
;	extern	_memcpy
;	extern	gfy_internal_End
;	extern	__idivs
;	extern	__idivu
;	extern	__ixor
;	extern	__sremu
;	extern	gfy_VertLine
;	extern	__ineg
;	extern	gfy_TextXPos
;	extern	__indcallhl
;	extern	_memmove
;	extern	gfy_Color
;	extern	gfy_PrintChar_Clip
;	extern	gfy_ClipXMax
;	extern	gfy_TextYPos
;	extern	gfy_Text_TP_Color
;	extern	__imulu
;	extern	gfy_ClipYMax
;	extern	gfy_TextWidthScale
;	extern	gfy_Transparent_Color
;	extern	gfy_GetCharWidth
;	extern	gfy_TextData
;	extern	gfy_ClipXMin
;	extern	gfy_TextHeightScale
;	extern	__ishl
;	extern	gfy_Text_FG_Color
;	extern	__setflag
;	extern	__iand
;	extern	gfy_ClipYMin
;	extern	gfy_Text_BG_Color
;	extern	gfy_HorizLine_NoClip
;	extern	__frameset
;	extern	gfy_SetTextXY
;	extern	gfy_VertLine_NoClip
;	extern	__Unwind_SjLj_Unregister
;	extern	__iremu
;	extern	__bshl
