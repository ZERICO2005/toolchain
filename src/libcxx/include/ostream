// -*- C++ -*-
#ifndef _EZCXX_OSTREAM
#define _EZCXX_OSTREAM

#include <ios>
#include <iterator>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <ti/sprintf.h>

#pragma clang system_header

void dConsolePut(const char *);
void dConsolePutChar(const char );

namespace std {

struct ostream { };
extern ostream cout;
extern ostream cerr;
extern ostream clog;

static const char endl = '\n';		///< End of line character.
static const char ends = '\0';		///< End of string character.

inline ostream & operator << (ostream & os, bool b) {
    dConsolePutChar(b ? '1' : '0');
    return os;
}

inline ostream & operator << (ostream & os, int i) {
    char buf[sizeof("-8388608")];
    boot_sprintf(buf, "%d", i);
    dConsolePut(buf);
    return os;
}

inline ostream & operator << (ostream & os, unsigned i) {
    char buf[sizeof("16777215")];
    boot_sprintf(buf, "%u", i);
    dConsolePut(buf);
    return os;
}

inline ostream & operator << (ostream & os, char ch) {
    dConsolePutChar(ch);
    return os;
}

inline ostream & operator << (ostream & os, double d) {
    char buf[112];
    std::snprintf(buf, sizeof(buf), "%lf", d);
    dConsolePut(buf);
    return os;
}

inline ostream & operator << (ostream & os, const char * s) {
    dConsolePut(s);
    return os;
}

inline ostream & operator << (ostream & os, const std::string & s) {
    dConsolePut(s.c_str());
    return os;
}

} // namespace std

#endif // _EZCXX_OSTREAM
