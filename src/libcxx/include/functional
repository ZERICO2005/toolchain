// -*- C++ -*-
#ifndef _EZCXX_FUNCTIONAL
#define _EZCXX_FUNCTIONAL

#include <__config>
#include <EASTL/functional.h>

#pragma clang system_header

namespace std {

template <class _Arg, class _Result>
struct _EZCXX_TEMPLATE_VIS unary_function {
	typedef _Arg argument_type;
	typedef _Result result_type;
};

template <class _Arg1, class _Arg2, class _Result>
struct _EZCXX_TEMPLATE_VIS binary_function {
	typedef _Arg1 first_argument_type;
	typedef _Arg2 second_argument_type;
	typedef _Result result_type;
};

template <typename _Tp>
using hash = eastl::hash<_Tp>;

} // namespace std

#endif // _EZCXX_FUNCTIONAL
