;	section	.text,"ax",@progbits
;	assume	adl = 1
;	section	.text,"ax",@progbits
;	public	gontlib_DrawStringL
gontlib_DrawStringL:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 17
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	bc, (ix + 9)
	ld	a, (iy)
	or	a, a
	jq	z, BB0_17
	push	bc
	pop	de
	ld	bc, 65535
	ld	a, (_TextNewlineControl)
	and	a, 1
	ld	hl, (_conf+4)
	call	__iand
	push	de
	pop	bc
	ex	de, hl
	ld	hl, (_root)
	add	hl, de
	ld	(ix - 3), hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_3
	ld	bc, 0
	jq	BB0_17
BB0_3:
	ld	(ix - 13), a
	inc	iy
	push	bc
	pop	hl
	dec	hl
	ld	(ix - 9), hl
BB0_4:
	ld	e, (iy - 1)
	dec	bc
	ld	a, e
	or	a, a
	jq	z, BB0_17
	ld	(ix - 12), iy
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	l, e
	ld	(ix - 6), hl
	ld	a, (_TextFirstPrintableCodePoint)
	ld	iy, 0
	ld	iyl, a
	ld	hl, -8388608
	ld	a, e
	ex	de, hl
	add	iy, de
	ld	hl, (ix - 6)
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jq	c, BB0_15
	ld	(ix - 16), bc
	ld	(ix - 17), a
	ld	l, a
	push	hl
	call	gontlib_ValidateCodePoint
	pop	hl
	bit	0, a
	jq	z, BB0_16
	ld	a, (_TextNewlineControl)
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	jr	nz, BB0_9
	call	gontlib_Newline
	bit	0, a
	jr	nz, BB0_16
	jr	BB0_13
BB0_9:
	ld	a, (ix - 17)
	ld	c, a
	ld	hl, (ix - 3)
	add	hl, bc
	ld	c, (hl)
	ld	iy, (_TextX)
	add	iy, bc
	ld	hl, (_TextXMax)
	ld	de, -8388608
	add	iy, de
	add	hl, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	nc, BB0_12
	bit	0, (ix - 13)
	jr	z, BB0_16
	call	gontlib_Newline
	bit	0, a
	ld	a, (ix - 17)
	jr	nz, BB0_18
BB0_12:
	ld	l, a
	push	hl
	call	gontlib_DrawGlyph
	pop	hl
BB0_13:
	ld	de, (ix - 12)
	push	de
	pop	iy
	inc	iy
	ld	hl, (ix - 9)
	dec	hl
	ld	(ix - 9), hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 16)
	ld	hl, 0
	jq	nz, BB0_4
	push	hl
	pop	bc
	push	de
	pop	iy
	jr	BB0_17
BB0_15:
	ld	iy, (ix - 12)
	jr	BB0_17
BB0_16:
	ld	iy, (ix - 12)
	ld	bc, (ix - 16)
BB0_17:
	ld	(_TextLastCharacterRead), iy
	ld	(_TempCharactersLeft), bc
	ld	hl, (_TextX)
	ld	sp, ix
	pop	ix
	ret
BB0_18:
	ld	bc, (ix - 9)
	ld	iy, (ix - 12)
	jr	BB0_17
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gontlib_DrawGlyph
gontlib_DrawGlyph:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 32
	ld	sp, hl
	xor	a, a
	ld	(ix - 7), a
	ld	l, (ix + 6)
	push	hl
	call	gontlib_ValidateCodePoint
	pop	hl
	bit	0, a
	jq	z, BB1_24
	ld	bc, 65535
	ld	a, (_conf+3)
	ld	l, a
	ld	a, (ix + 6)
	sub	a, l
	ld	hl, (_conf+4)
	call	__iand
	ex	de, hl
	ld	hl, (_root)
	ld	(ix - 3), hl
	add	hl, de
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	ld	(ix - 20), de
	add	hl, de
	ld	a, (hl)
	ld	(ix - 4), a
	ld	a, (_conf+11)
	ld	(ix - 27), a
	ld	a, (_conf+12)
	ld	(ix - 32), a
	ld	a, (_conf+1)
	ld	(ix - 14), a
	ld	a, (_TextStraightBackgroundColor)
	ld	l, a
	ld	(ix - 30), hl
	ld	a, (_TextStraightForegroundColor)
	ld	(ix - 31), a
	ld	a, (_TextTransparentMode)
	ld	(ix - 17), a
	ld	hl, (_TextX)
	ld	(ix - 23), hl
	ld	a, (_TextY)
	push	bc
	pop	de
	ld	e, a
	ld	(ix - 13), de
	ld	a, (_conf+10)
	push	bc
	pop	de
	ld	e, a
	or	a, a
	sbc	hl, de
	ld	iy, (-1900524)
	call	__set_bc_and_mul_hl_by_240
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, (ix - 13)
	add	iy, bc
	ld	(ix - 10), iy
	ld	hl, (_conf+7)
	ld	bc, 65535
	inc	hl
	dec.s	hl
	ld	c, 1
	add	hl, hl
	push	hl
	pop	bc
	ld	iy, (ix - 3)
	lea	hl, iy
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 0
	ld	c, l
	ld	b, h
	add	iy, bc
	ld	(ix - 3), iy
	or	a, a
	sbc	hl, hl
	ld	l, (ix - 4)
	ld	(ix - 26), hl
	sbc	hl, de
	ld	de, (ix - 23)
	add	hl, de
	ld	(_TextX), hl
	ld	de, (ix - 13)
	push	de
	push	hl
	ld	hl, (ix - 20)
	push	hl
	ld	hl, _.str
	push	hl
	ld	hl, -327680
	push	hl
	call	_boot_sprintf
	ld	hl, 15
	add	hl, sp
	ld	sp, hl
	ld	hl, (_root)
	ld	de, (ix - 3)
	push	de
	ld	de, _conf
	push	de
	push	hl
	ld	hl, _.str.1
	push	hl
	ld	hl, -327680
	push	hl
	call	_boot_sprintf
	ld	hl, 15
	add	hl, sp
	ld	sp, hl
	call	gfy_Wait
	ld	hl, (ix - 26)
	ld	bc, -240
	call	__imulu
	ld	(ix - 13), hl
	ld	a, (ix - 17)
	or	a, a
	jq	nz, BB1_16
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	push	bc
	pop	de
	ld	e, (ix - 27)
	ld	hl, (ix - 10)
	ld	(ix - 20), de
	add	hl, de
	ld	(ix - 17), hl
	ld	d, (ix - 14)
	ld	a, d
	or	a, a
	jr	z, BB1_10
	ld	iy, (ix - 17)
BB1_4:
	ld	e, (ix - 4)
	ld	a, e
	or	a, a
	jr	z, BB1_9
	ld	hl, (ix - 3)
	ld	hl, (hl)
BB1_6:
	ld	(ix - 23), hl
	ld	bc, -8388608
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, (ix - 31)
	jr	c, BB1_8
	ld	hl, (ix - 30)
	ld	a, l
BB1_8:
	ld	(iy), a
	ld	hl, (ix - 23)
	ld	c, 1
	add	hl, hl
	ld	bc, 240
	add	iy, bc
	dec	e
	ld	a, e
	or	a, a
	ld	bc, 0
	jr	nz, BB1_6
BB1_9:
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	push	bc
	pop	hl
	ld	bc, (ix - 13)
	add	iy, bc
	push	hl
	pop	bc
	inc	iy
	ld	a, (ix - 7)
	inc	a
	ld	(ix - 7), a
	cp	a, d
	jr	nz, BB1_4
BB1_10:
	ld	e, (ix - 4)
	ld	a, e
	or	a, a
	jq	z, BB1_24
	ld	c, d
	ld	(ix - 7), bc
	ld	hl, (ix - 10)
BB1_12:
	ld	(ix - 3), e
	ld	(ix - 10), hl
	ld	de, (ix - 20)
	push	de
	ld	de, (ix - 30)
	push	de
	push	hl
	call	_memset
	ld	e, (ix - 3)
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 10)
	ld	bc, 240
	add	hl, bc
	dec	e
	ld	a, e
	or	a, a
	jr	nz, BB1_12
	ld	c, (ix - 4)
	ld	a, c
	or	a, a
	jq	z, BB1_24
	ld	de, (ix - 7)
	ld	hl, (ix - 17)
	add	hl, de
	ex	de, hl
	or	a, a
	sbc	hl, hl
	ld	l, (ix - 32)
	ld	(ix - 3), hl
BB1_15:
	ld	(ix - 4), c
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 30)
	push	hl
	ld	(ix - 17), de
	push	de
	call	_memset
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	c, (ix - 4)
	ld	de, 240
	ld	hl, (ix - 17)
	add	hl, de
	ex	de, hl
	dec	c
	ld	a, c
	or	a, a
	jr	nz, BB1_15
	jr	BB1_24
BB1_16:
	ld	c, (ix - 27)
	ld	de, 0
	ld	iy, (ix - 10)
	ld	l, (ix - 14)
	ld	a, l
	or	a, a
	ld	b, (ix - 4)
	jr	z, BB1_24
	ld	e, c
	add	iy, de
	ld	c, 1
BB1_18:
	ld	a, b
	or	a, a
	jr	z, BB1_23
	ld	hl, (ix - 3)
	ld	hl, (hl)
BB1_20:
	ld	(ix - 10), hl
	ld	de, -8388608
	add	hl, de
	or	a, a
	sbc	hl, de
	jr	nc, BB1_22
	lea	hl, iy
	ld	a, (ix - 31)
	ld	(hl), a
BB1_22:
	ld	hl, (ix - 10)
	call	__ishl
	ld	de, 240
	add	iy, de
	dec	b
	ld	a, b
	or	a, a
	jr	nz, BB1_20
BB1_23:
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	de, (ix - 13)
	add	iy, de
	inc	iy
	ld	a, (ix - 7)
	inc	a
	ld	(ix - 7), a
	ld	l, (ix - 14)
	cp	a, l
	ld	b, (ix - 4)
	jr	nz, BB1_18
BB1_24:
	ld	hl, (_TextX)
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gontlib_DrawString
gontlib_DrawString:
	ld	iy, 0
	add	iy, sp
	ld	hl, (iy + 3)
	ld	de, -1
	push	de
	push	hl
	call	gontlib_DrawStringL
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gontlib_ScrollWindowUp
gontlib_ScrollWindowUp:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 18
	ld	sp, hl
	call	gontlib_GetWindowWidth
	ld	(ix - 6), hl
	call	gontlib_GetCurrentFontHeight
	ld	e, a
	ld	a, (_TextYMax)
	ld	iy, 0
	lea	hl, iy
	ld	l, a
	ld	a, (_TextYMin)
	lea	bc, iy
	ld	c, a
	ld	iyl, e
	ld	(ix - 3), iy
	ld	(ix - 12), bc
	add	iy, bc
	lea	de, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	de, -8388608
	ld	(ix - 9), iy
	add	iy, de
	ld	bc, -8388607
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB3_5
	ld	hl, (ix - 3)
	add	hl, de
	ex	de, hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB3_5
	ld	hl, (_TextXMin)
	ld	(ix - 18), hl
	ld	hl, (-1900524)
	ld	(ix - 15), hl
	call	gfy_Wait
	ld	hl, (ix - 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_5
	ld	bc, 240
	ld	hl, (ix - 18)
	call	__imulu
	ex	de, hl
	ld	hl, (ix - 15)
	add	hl, de
	ld	de, (ix - 12)
	add	hl, de
	ex	de, hl
BB3_4:
	push	de
	pop	bc
	ld	(ix - 15), bc
	push	bc
	pop	hl
	ld	de, (ix - 3)
	add	hl, de
	ld	de, (ix - 9)
	push	de
	push	bc
	push	hl
	call	_memmove
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	de, 240
	ld	hl, (ix - 15)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 6)
	dec	hl
	ld	(ix - 6), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_4
BB3_5:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.text,"ax",@progbits
;	public	gontlib_ScrollWindowDown
gontlib_ScrollWindowDown:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 18
	ld	sp, hl
	call	gontlib_GetWindowWidth
	ld	(ix - 6), hl
	call	gontlib_GetCurrentFontHeight
	ld	e, a
	ld	a, (_TextYMax)
	ld	iy, 0
	lea	hl, iy
	ld	l, a
	ld	a, (_TextYMin)
	lea	bc, iy
	ld	c, a
	ld	iyl, e
	ld	(ix - 3), iy
	ld	(ix - 12), bc
	add	iy, bc
	lea	de, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	de, -8388608
	ld	(ix - 9), iy
	add	iy, de
	ld	bc, -8388607
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB4_5
	ld	hl, (ix - 3)
	add	hl, de
	ex	de, hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB4_5
	ld	hl, (_TextXMin)
	ld	(ix - 18), hl
	ld	hl, (-1900524)
	ld	(ix - 15), hl
	call	gfy_Wait
	ld	hl, (ix - 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_5
	ld	bc, 240
	ld	hl, (ix - 18)
	call	__imulu
	ex	de, hl
	ld	hl, (ix - 15)
	add	hl, de
	ld	de, (ix - 12)
	add	hl, de
	ex	de, hl
BB4_4:
	push	de
	pop	bc
	ld	(ix - 15), bc
	push	bc
	pop	hl
	ld	de, (ix - 3)
	add	hl, de
	ld	de, (ix - 9)
	push	de
	push	hl
	push	bc
	call	_memmove
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	de, 240
	ld	hl, (ix - 15)
	add	hl, de
	ex	de, hl
	ld	hl, (ix - 6)
	dec	hl
	ld	(ix - 6), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB4_4
BB4_5:
	ld	sp, ix
	pop	ix
	ret
;	section	.text,"ax",@progbits

;	section	.rodata,"a",@progbits
;	private	_.str
_.str:
	db	"%02X %d %d", 10, 0

;	section	.rodata,"a",@progbits
;	private	_.str.1
_.str.1:
	db	"%p %p %p", 10, 0

;	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
;	extern	_root
;	extern	_TextStraightForegroundColor
;	extern	_memset
;	extern	__Unwind_SjLj_Register
;	extern	_boot_sprintf
;	extern	_TextY
;	extern	gontlib_GetCurrentFontHeight
;	extern	_TextXMax
;	extern	_TextXMin
;	extern	_conf
;	extern	_TextX
;	extern	_memmove
;	extern	gfy_Wait
;	extern	__ishl
;	extern	gontlib_ValidateCodePoint
;	extern	_TempCharactersLeft
;	extern	_TextYMin
;	extern	_TextYMax
;	extern	__Unwind_SjLj_Unregister
;	extern	__iand
;	extern	gontlib_Newline
;	extern	__imulu
;	extern	_TextFirstPrintableCodePoint
;	extern	_TextNewlineControl
;	extern	_TextLastCharacterRead
;	extern	gontlib_GetWindowWidth
;	extern	_TextStraightBackgroundColor
;	extern	_TextTransparentMode
